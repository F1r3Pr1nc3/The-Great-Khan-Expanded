###################################################
#
# "Overlord" Enclave Events
# By Gemma Thomson, Hadrien Buytaers & Chad Inglis
# Modded by FirePrince (Khan hires only neutral mercenary + minor backward compat.)
#
###################################################
namespace = enclave
# enclave.2xxx	Mercenary enclave
# Only vanilla fix leaders
# Mercenary Enclave: HIRE FLEET
# This = player country; event_target:mercenary_enclave_country = enclave country
country_event = {
	id = enclave.210
	title = enclave.205.name
	desc = enclave.210.desc
	# base = enclave.205 # (resolved “event inheritance” due load order)
	# desc_clear = yes
	# option_clear = yes
	is_triggered_only = yes
	diplomatic = yes
	custom_gui = "enclave_mercenary_window"
	custom_gui_option = "enclave_mercenary_option"
	picture_event_data = {
		portrait = event_target:mercenary_enclave_country
		room = mercenary_enclave_room
	}
	location = event_target:mercenary_enclave_system
	immediate = {
		event_target:mercenary_enclave_country = {
			if = {
				limit = {
					count_owned_leader = {
						count = 0
						limit = {
							leader_class = commander
							is_councilor = no
							is_ruler = no
						}
					}
				}
				create_leader = {
					class = commander
					species = owner_species					# event_target:mercenary_enclave_species
					name = random
					skill = 3
					background_ethic = "ethic_militarist"
					skip_background_generation = yes
					can_manually_change_location = no
					hide_leader = yes
					event_leader = yes
					custom_description = "custom_mercenary_admiral_desc"
					traits = {
						0 = leader_trait_mercenary_warrior
						1 = leader_trait_aggressive_2
					}
				}
			}
			random_owned_leader = {
				limit = {
					leader_class = commander
					is_councilor = no
					is_ruler = no
				}
				save_event_target_as = mercenary_admiral
				set_immortal = yes
			}
			# Can hire only the main fleet
			ordered_controlled_fleet = {
				limit = {
					is_ship_class = shipclass_military
					is_leased = no
				}
				position = 0
				order_by = trigger:fleet_power
				save_event_target_as = mercenary_fleet
				assign_leader = event_target:mercenary_admiral
				set_name = {
					key = NAME_Mercenary_Fleet
					variable_string = "[event_target:mercenary_enclave_country.GetName]"
				}
				set_fleet_settings = { can_change_leader = no }
			}
		}
		# Without this, the 'immediate' will not be invoked when the event runs in the special mode that allows the AI to collect trade data.
		run_in_ai_mode = yes
	}
	# Discuss another matter (return to menu)
	option = {
		name = enclave.215.a
		hidden_effect = {
			country_event = { id = enclave.205 }
		}
	}
	option = {
		name = DEAL
		ai_trade_facility = {
			offer_hire_mercenary_fleet = yes
			info_gathering = {
				get_trade_data = { target = event_target:mercenary_enclave_country }
			}
			option_selection = {
				if = {
					limit = {
						is_offer_terms_actual = { target = event_target:mercenary_enclave_country }
					}
					make_special_trade = { target = event_target:mercenary_enclave_country }
					set_country_flag = mercenary_enclave_rented_fleet					# For tracking returning customers
					event_target:mercenary_enclave_country = {
						add_trust = {
							who = root
							amount = 15
						}
					}
				}
			}
			allow = {
				can_afford_special_offer = { target = event_target:mercenary_enclave_country }
			}
		}
		custom_tooltip = opinion15
		hidden_effect = {
			country_event = { id = enclave.211 }
		}
	}
	option = {
		name = GOODBYE
		default_hide_option = yes
	}
}

# Only vanilla fix leaders
# Mercenary Fleet Commandeered (patron side)
country_event = {
	id = enclave.290
	title = enclave.290.name
	desc = enclave.290.desc
	picture = GFX_evt_mercenary_fleet
	show_sound = evn_ove_mercenary_fleet
	is_triggered_only = yes
	immediate = {
		from = {
			if = {
				limit = {
					count_owned_leader = {
						count = 0
						limit = {
							leader_class = commander
							is_councilor = no
							is_ruler = no
						}
					}
				}
				create_leader = {
					class = commander
					species = owner_species					# event_target:mercenary_enclave_species
					name = random
					skill = 3
					background_ethic = "ethic_militarist"
					skip_background_generation = yes
					can_manually_change_location = no
					hide_leader = yes
					event_leader = yes
					custom_description = "custom_mercenary_admiral_desc"
					traits = {
						0 = leader_trait_mercenary_warrior
						1 = leader_trait_aggressive_2
					}
				}
			}
			random_owned_leader = {
				limit = {
					leader_class = commander
					is_councilor = no
					is_ruler = no
				}
				save_event_target_as = mercenary_admiral
			}
			ordered_controlled_fleet = {
				limit = {
					is_ship_class = shipclass_military
					is_leased = no
				}
				position = 0
				order_by = trigger:fleet_power
				save_event_target_as = mercenary_fleet
				assign_leader = event_target:mercenary_admiral
			}
			remove_country_flag = fleet_commandeered
			event_target:mercenary_fleet = {
				give_fleet = {
					controller = root
					days = 3600
				}
				set_timed_fleet_flag = { flag = fleet_on_loan@root years = 10 }
			}
		}
		set_country_flag = mercenary_enclave_rented_fleet
	}
	option = { name = EXCELLENT }
}

# Khan hires available mercs
event = {
	id = enclave.2045
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		CmtTriggerNowInKhanCrisis = yes
		NOT = { has_global_flag = great_khan_dead }
		any_country = {
			is_country_type = enclave_mercenary
			count_owned_fleet = { limit = { is_leased = yes } count = 0 }
		}
	}
	immediate = {
		# if = { limit = { NOT = { exists = event_target:raider_khanate } }
		# 	random_country = {
		# 		limit = {
		# 			is_country_type = awakened_marauders
		# 			NOT = { has_country_flag = demonic_incursion_country }
		# 		}
		# 		save_global_event_target_as = raider_khanate
		# 	}
		# }
		if = {
			limit = {
				exists = event_target:great_khan
				exists = event_target:great_khan.fleet
			}
			event_target:great_khan.fleet = { save_event_target_as = khan_fleet }
		} else = {
			event_target:raider_khanate = {
				random_owned_fleet = {
					limit = { has_fleet_flag = khan_fleet }
					save_event_target_as = khan_fleet
				}
			}
		}
		if = { # Fallback 3.4 saves/mods
			limit = {
				NOT = { exists = event_target:khan_fleet }
			}
			event_target:raider_khanate = {
				random_owned_fleet = {
					limit = {
						exists = leader
						leader = { has_leader_flag = great_khan }
					}
					save_event_target_as = khan_fleet
					leader = { save_global_event_target_as = great_khan }
				}
			}
		}
		random_country = {
			limit = {
				is_default_or_fallen = yes
				has_communications = event_target:raider_khanate
				has_modifier = country_enclave_capacity_decrease_modifier
				NOR = {
					is_gestalt = yes
					has_civic = civic_fanatic_purifiers
					is_hostile = event_target:raider_khanate
				}
			}
			random_country = {
				limit = {
					is_country_type = enclave_mercenary
					count_owned_fleet = { limit = { is_leased = yes } count = 0 }
					has_country_flag = created_by@prev
					prev = { has_country_flag = merc_enclave_founder@prev }
				}
				save_event_target_as = mercenary_enclave_country
			}
		}
		if = {
			limit = {
				NOT = { exists = event_target:mercenary_enclave_country }
			}
			random_country = {
				limit = {
					is_country_type = enclave_mercenary
					NOR = {
						any_owned_fleet = { is_leased = yes }
						any_country = {
							is_default_or_fallen = yes
							has_communications = event_target:raider_khanate
							has_modifier = country_enclave_capacity_decrease_modifier
							OR = {
								is_ai = no
								is_hostile = event_target:raider_khanate
							}
							has_country_flag = merc_enclave_founder@prev
							prev = { has_country_flag = created_by@prev }
						}
					}
				}
				save_event_target_as = mercenary_enclave_country
			}
		}
		if = { limit = { exists = event_target:mercenary_enclave_country }
			event_target:mercenary_enclave_country = {
				# Khan hires only the main fleet
				ordered_controlled_fleet = {
					limit = {
						is_ship_class = shipclass_military
						is_leased = no
					}
					position = 0
					order_by = trigger:fleet_power
					save_event_target_as = mercenary_fleet
				}
				if = {
					limit = {
						NOT = { exists = event_target:marauder_rally_point }
					}
					event_target:raider_khanate = {
						random_planet_within_border = {
							limit = { is_star = no }
							weights = {
								base = 1
								modifier = { add = 2 is_a_planet = yes }
							}
							# Possible inconsisent due other mods
							save_global_event_target_as = marauder_rally_point
							set_planet_flag = marauder_rally_point
						}
					}
				}
				event_target:mercenary_fleet = {
					give_fleet = {
						controller = event_target:raider_khanate
						days = 1510
					}
					set_name = {
						key = NAME_Mercenary_Fleet
						variable_string = "[event_target:mercenary_enclave_country.GetName]"
					}
					if = {
						limit = {
							exists = solar_system
							exists = event_target:khan_fleet.solar_system
							NOT = { can_access_system = event_target:khan_fleet.solar_system }
						}
						if = { limit = { exists = event_target:marauder_rally_point.starbase }
							set_home_base = event_target:marauder_rally_point.starbase
							set_mia = mia_return_home
						}
						if = { limit = { exists = event_target:khan_fleet }
							queue_actions = {
								wait = 5
								move_to = event_target:khan_fleet
							}
						}
					}
					order_forced_return = yes
					if = { limit = { exists = event_target:khan_fleet }
						auto_follow_fleet = {
							target = event_target:khan_fleet
							attack_fleet = no
						}
					}
				}
				set_country_flag = mercenary_enclave_rented_fleet
			}
		}
	}
}

# Khan dies, mercenaries leave
event = {
	id = enclave.2055
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = great_khan_dead
		any_country = {
			is_country_type = enclave_mercenary
			any_owned_fleet = {
				is_leased = yes
				controller = { is_country_type = awakened_marauders }
			}
		}
	}
	immediate = {
		random_country = {
			limit = {
				is_country_type = enclave_mercenary
				any_owned_fleet = {
					is_leased = yes
					controller = { CmtTriggerIsKhanCountry = yes }
				}
			}
			random_controlled_fleet = {
				limit = {
					is_leased = yes
					controller = { CmtTriggerIsKhanCountry = yes }
				}
				end_fleet_contract = {
					initiator = event_target:raider_khanate					# controller
					reason = cancelled
				}
			}
			remove_country_flag = mercenary_enclave_rented_fleet
		}
	}
}

# TODO try and have it not trigger is you dismiss the fleet.
# Merc Fleet Lease Ended
# fleet_event = {
# 	id = enclave.2059
# 	hide_window = yes
# 	is_triggered_only = yes
# 	trigger = {
# 		from = { is_ai = no }
# 	}
# 	immediate = {
# 		fromfrom = {
# 			save_event_target_as = mercenary_enclave_country
# 			# Failsafe to catch if fleets are no longer on loan
# 			remove_loaning_fleet_flag = yes
# 		}
# 		from = {
# 			country_event = { id = enclave.2060 }
# 		}
# 	}
# }
# Unemployed mercs return to merc station
# Vanilla fix missing triggers
# This = enclave_mercenary
country_event = {
	id = enclave.2070
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_owned_fleet = {
			is_leased = no
			NAND = {
				exists = solar_system
				solar_system = {
					any_fleet_in_system = {
						is_ship_size = enclave_mercenary_station
						is_owned_by = root
					}
				}
			}
		}
	}
	immediate = {
		random_owned_fleet = {
			limit = { is_ship_size = enclave_mercenary_station }
			save_event_target_as = mercenary_enclave_station
		}
		ordered_controlled_fleet = {
			limit = {
				is_ship_class = shipclass_military
				is_leased = no
				NAND = {
					exists = solar_system
					solar_system = {
						any_fleet_in_system = {
							is_ship_size = enclave_mercenary_station
							is_owned_by = root
						}
					}
				}
			}
			position = 0
			order_by = trigger:fleet_power
			if = { limit = { has_auto_move_target = yes }
				remove_auto_move_target = yes
				clear_orders = yes
				clear_fleet_actions = this
			}
			if = { limit = { exists = event_target:mercenary_enclave_station.starbase }
				set_home_base = event_target:mercenary_enclave_station.starbase
			}
			if = {
				limit = {
					exists = event_target:mercenary_enclave_station.solar_system
					can_access_system = event_target:mercenary_enclave_station.solar_system
				}
				order_forced_return = yes
				auto_follow_fleet = { target = event_target:mercenary_enclave_station }
			} else_if = {
				limit = { exists = solar_system can_go_mia = yes }				# Otherwise CTD
				set_mia = mia_return_home
			}
			root = {
				random_owned_fleet = {
					limit = { is_ship_size = enclave_mercenary_station }
					prevprev = {
						queue_actions = { move_to = prev }
					}
				}
			}
		}
	}
}

# Only vanilla fix leaders
# on_monthly_pulse_country
# Assign an admiral to hired merc fleet if they lose theirs
country_event = {
	id = enclave.2075
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_civic = civic_mercenary_enclave
		any_owned_fleet = {
			is_leased = yes
			NOT = { exists = leader }
		}
	}
	immediate = {
		create_leader = {
			class = commander
			species = owner_species			# event_target:mercenary_enclave_species
			name = random
			skill = 3
			background_ethic = "ethic_militarist"
			skip_background_generation = yes
			can_manually_change_location = no
			hide_leader = yes
			custom_description = "custom_mercenary_admiral_desc"
			traits = { trait = leader_trait_mercenary_warrior }
		}
		random_owned_fleet = {
			limit = {
				is_leased = yes
				NOT = { exists = leader }
			}
			assign_leader = last_created_leader
		}
	}
}
