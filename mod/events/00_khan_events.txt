#########################################
#########################################
#####			Marauder			#####
#####	Khan (Horde Crisis) Events	#####
#####	Khan (War in Heaven) Events	#####
#####		By FirePrince			#####
#####								#####
#########################################
#########################################
#
####		SHORT DOCU		###
#
## khan.203	START PREPARE FINAL UPRISING
## khan.212	Find Leader for Uprise League NAL (similar war_in_heaven.12)
## khan.215	Prepare for War and find Leader for League.
## khan.216	Declare War (League vs. Khan) (similar war_in_heaven.16)
## khan.217	Form Galactic Community # Copy of galcom.1
## khan.218	Turn the Khan into the Galactic Emperor (or at least playable Empire - 3.2).
## khan.219	Force integrate subject (TODO as special project?)
### khan.289-299 FINAL UPRISING ###
# khan.291 2nd chance to pick side (similar war_in_heaven.4)
## khan.300 Set Mod Flag (on_game_start)
## khan.311 Reduce Khan naval cap's - create dummy country.
# khan.605 Player Defeating the Khan and choosing to be Successor
# khan.798 Fabricator satrapy (Reinforcement Cycle)
# khan.799 Submit as fabricator satrapy
### khan.870 Great Khan has won (End-Game - Improved Reinforcement Cycle)
## khan.901 Khan asked to defend subject member (on_war_beginning) # Similar emperor.370
# khan.997 Submit as machinesmith (vanilla = marauder.551)
# khan.998 Special Submit?

###################
###- Constants -###
###################

### Critical (Lifespan of Khan, debug code)
@CmtConstKhanLifespan_1a =	1		### Minimun Lifespan / day
@CmtConstKhanLifespan_1b =	0.025	### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_1c =	35		### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_1d =	5		### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_1e =	8		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_1f =	4		### Time-Lag of Post-Death Process (random = 1f)

### Fleeting (Lifespan of Khan)
@CmtConstKhanLifespan_2a =	4320	### Minimun Lifespan / day
@CmtConstKhanLifespan_2b =	0.75	### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_2c =	7200	### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_2d =	2880	### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_2e =	90		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_2f =	60		### Time-Lag of Post-Death Process (random = 1f)

### Standard (Lifespan of Khan)
@CmtConstKhanLifespan_3a =	7200	### Minimun Lifespan / day
@CmtConstKhanLifespan_3b =	1.00	### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_3c =	10800	### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_3d =	5000	### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_3e =	200		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_3f =	100		### Time-Lag of Post-Death Process (random = 1f)

### Enduring (Lifespan of Khan)
@CmtConstKhanLifespan_4a =	10800	### Minimun Lifespan / day
@CmtConstKhanLifespan_4b =	3.00	### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_4c =	16200	### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_4d =	5400	### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_4e =	270		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_4f =	180		### Time-Lag of Post-Death Process (random = 1f)

### Venerable (Lifespan of Khan)
@CmtConstKhanLifespan_5a =	18000	### Minimun Lifespan / day
@CmtConstKhanLifespan_5b =	5.00	### Probability of Death (2%/month for 1)
@CmtConstKhanLifespan_5c =	27000	### Maximun Lifespan / day (days = 1c)
@CmtConstKhanLifespan_5d =	9000	### Maximun Lifespan / day (random = 1d)
@CmtConstKhanLifespan_5e =	360		### Time-Lag of Post-Death Process (days = 1e)
@CmtConstKhanLifespan_5f =	360		### Time-Lag of Post-Death Process (random = 1f)

### Immortality (Lifespan of Khan): Directly Written in Event/Effect
# @CmtConstKhanLifespan_6e =	360		### Time-Lag of Post-Death Process (days = 1e)
# @CmtConstKhanLifespan_6f =	360		### Time-Lag of Post-Death Process (random = 1f)

namespace = khan

### START PREPARE FINAL UPRISING
# This = Marauder
country_event = {
	id = khan.203
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		exists = event_target:raider_khanate
		is_same_empire = event_target:raider_khanate
	}
	immediate = {
		remove_global_flag = war_in_heaven_nonaligned_league
		remove_global_flag = war_in_heaven_seeking_league_leader

		# random_subject = {
		ordered_subject = {
			position = 0
			order_by = trigger:fleet_power
			inverse = yes
			limit = {
				merg_is_default_empire = yes
				opinion_level = { who = prev level > neutral }
				is_ai = yes
				OR = {
					relative_power = {
						who = prev
						category = all
						value > inferior
					}
					relative_power = {
						who = prev
						category = fleet
						value > equivalent
					}
				}
			}
			prev = { save_event_target_as = new_khanate }
			country_event = { id = marauder.609 days = -1 }		# Fully handover
			destroy_country = yes
		}
		every_subject = {
			limit = {
				is_default_or_fallen = yes
				is_ai = yes
				NOR = {
					has_country_flag = war_in_heaven_league_leader_declined
					has_active_event = { marauder.554 }
				}
			}
			country_event = { id = marauder.554 } # Rebel
			# set_subject_of = { who = none }
			# if = { limit = { has_modifier = "satrapy_of_horde" }
			# 	remove_modifier = "satrapy_of_horde"
			# }
			# if = { limit = { is_variable_set = "planets_lost_to_marauder" }
			# 	multiply_variable = { which = "planets_lost_to_marauder" value = 0.2 }
			# }
			# set_country_flag = rebelling_satrapy
			# set_timed_country_flag = { flag = rebellion_cooldown days = @CmtConstKhanLifespan_5e }
			# add_opinion_modifier = { modifier = opinion_traitor_to_empire who = prev }
			# if = {
			# 	limit = { has_federation = yes is_in_federation_with = event_target:raider_khanate }
			# 	leave_alliance = { override_requirements = yes }
			# }
			# if = {
			# 	limit = { NOT = { is_hostile = prev } }
			# 	prev = {
			# 		set_faction_hostility = {
			# 			target = prev
			# 			set_hostile = yes
			# 		}
			# 	}
			# }
		}
		set_timed_global_flag = { flag = war_in_heaven_ongoing days = @CmtConstKhanLifespan_2e }
		country_event = { id = khan.212 days = 16 } # Create NAL
	}
}

##########################
### Non-Aligned League ###
##########################

### Find Leader for Uprise League.
# This = Marauder
country_event = {
	id = khan.212 # war_in_heaven.12
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = war_in_heaven_ongoing
		CmtTriggerIsKhanCountry = yes
		NOR = {
			has_global_flag = war_in_heaven_nonaligned_league		## Leader Chosen
			has_global_flag = war_in_heaven_seeking_league_leader	## Now Ordering
		}
		has_galactic_emperor = no # Galactic Empire serves this purpose.
	}
	# mean_time_to_happen = { months = 1 }
	immediate = {
		# Custodian is asked first, if one exists.
		if = {
			limit = {
				has_galactic_custodian = yes
				any_playable_country = {
					is_galactic_custodian = yes
					NOR = {
						has_country_flag = war_in_heaven_league_leader_declined
						any_country = { merg_is_fallen_empire = yes is_at_war_with = prev }
					}
				}
			}
			random_playable_country = {
				limit = {
					is_galactic_custodian = yes
					NOR = {
						has_country_flag = war_in_heaven_league_leader_declined
						any_country = { merg_is_fallen_empire = yes is_at_war_with = prev }
					}
				}
				set_global_flag = war_in_heaven_seeking_league_leader
				country_event = { id = war_in_heaven.13 }
			}
		}
		### Search for federation leaders; offer leadership to strongest one that hasn't declined (if any)
		# Find strongest neutral power and offer them to become league leader.
		# First federation leaders are asked, then simply the strongest country.
		else_if = {
			limit = {
				# NOT = { has_global_flag = war_in_heaven_seeking_league_leader }
				any_federation = {
					any_member = {
						is_federation_leader = yes
						is_homicidal = no
						has_been_declared_crisis = no
						NOR = {
							has_country_flag = war_in_heaven_league_leader_declined
							any_country = { merg_is_fallen_empire = yes is_at_war_with = prev }
						}
					}
					count_federation = {
						limit = {
							NOT = { is_same_value = prev }
							relative_power = {
								who = prev
								value > equivalent
								category = fleet
							}
							any_member = {
								is_federation_leader = yes
								is_homicidal = no
								has_been_declared_crisis = no
								NOR = {
									has_country_flag = war_in_heaven_league_leader_declined
									any_country = { merg_is_fallen_empire = yes is_at_war_with = prev }
								}
							}
						}
						count = 0
					}
				}
			}
			random_federation = {
				limit = {
					any_member = {
						is_federation_leader = yes
						is_homicidal = no
						has_been_declared_crisis = no
						NOR = {
							has_country_flag = war_in_heaven_league_leader_declined
							any_country = { merg_is_fallen_empire = yes is_at_war_with = prev }
						}
					}
					count_federation = {
						limit = {
							NOT = { is_same_value = prev }
							relative_power = {
								who = prev
								value > equivalent
								category = fleet
							}
							any_member = {
								is_federation_leader = yes
								is_homicidal = no
								has_been_declared_crisis = no
								NOR = {
									has_country_flag = war_in_heaven_league_leader_declined
									any_country = { merg_is_fallen_empire = yes is_at_war_with = prev }
								}
							}
						}
						count = 0
					}
				}
				random_member = {
					limit = {
						is_federation_leader = yes
						is_homicidal = no
						has_been_declared_crisis = no
						NOR = {
							has_country_flag = war_in_heaven_league_leader_declined
							any_country = { merg_is_fallen_empire = yes is_at_war_with = prev }
						}
					}
					set_global_flag = war_in_heaven_seeking_league_leader
					country_event = { id = war_in_heaven.13 }
				}
			}
		}
		# Otherwise, make a list of neutral powers and search for strongest member to offer leadership.
		else = {
			random_playable_country = {
				limit = {
					# merg_is_default_empire = yes
					is_subject = no
					is_homicidal = no
					has_been_declared_crisis = no
					NOR = {
						# has_global_flag = war_in_heaven_seeking_league_leader
						has_country_flag = war_in_heaven_league_leader_declined
						any_country = { merg_is_fallen_empire = yes is_at_war_with = prev }
						# any_playable_country = {
						# 	is_subject = no
						# 	# merg_is_default_empire = yes
						# 	relative_power = {
						# 		who = prev
						# 		value > equivalent
						# 	}
						# 	NOR = {
						# 		has_country_flag = war_in_heaven_league_leader_declined
						# 		is_homicidal = yes
						# 		any_country = {
						# 			merg_is_fallen_empire = yes
						# 			is_at_war_with = prev
						# 		}
						# 	}
						# }
					}
				}
				prev = { change_variable = { which = CmtFlagNominatedLeader value = 1 } }
				set_timed_country_flag = { flag = CmtFlagNominatedLeader days = 3 }
			}

			## If there are fewer than 2 nominees, give up on forming league.
			if = {
				limit = {
					NOR = {
						event_target:CmtGlobalVar = { check_variable = { which = CmtVarHeavenNpcLeague value = 1 } }
						check_variable = { which = CmtFlagNominatedLeader value < 2 }
						count_country = {
							limit = { has_country_flag = CmtFlagNominatedLeader has_been_declared_crisis = no }
							count < 2
						}
					}
				}
				### Pick most powerful nominee & offer leadership.
				random_playable_country = {
					limit = {
						has_country_flag = CmtFlagNominatedLeader
						has_been_declared_crisis = no
						count_playable_country = {
							limit = {
								has_country_flag = CmtFlagNominatedLeader
								has_been_declared_crisis = no
								relative_power = { who = prev value > equivalent }
							}
							count = 0
						}
					}
					set_global_flag = war_in_heaven_seeking_league_leader
					country_event = { id = war_in_heaven.13 }
				}
			}
			else = {
				event_target:CmtGlobalVar = { set_variable = { which = CmtVarHeavenPreludeSpeed value = 1 } }
			}
			clear_variable = CmtFlagNominatedLeader
		}
		event_target:global_event_country = {
			if = {
				limit = { has_global_flag = war_in_heaven_started }
				country_event = { id = khan.215 days = 32 random = 16 }
			}
			else = {
				country_event = { id = khan.215 days = 64 random = 32 } # Start the War 1st try.
			}
			country_event = { id = khan.215 days = 96 random = 48 } # Start the War 2nd try.
		}
	}
}

### Prepare for War and find Leader for League.
# Scope = global country
country_event = {
	id = khan.215
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		has_global_flag = war_in_heaven_nonaligned_league
		NOT = { has_global_flag = war_in_heaven_seeking_league_leader }
		exists = event_target:raider_khanate
		has_global_flag = great_khan_wins
	}
	immediate = {
		random_federation = {
			limit = { has_federation_flag = non_aligned_league }
			random_member = {
				limit = { is_federation_leader = yes }
				if = {
					limit = { NOT = { is_at_war_with = root } }
					remove_global_flag = war_in_heaven_nonaligned_league_war
					remove_country_flag = war_in_heaven_nonaligned_league_timer
					country_event = { id = khan.216 days = 60 }
					country_event = { id = khan.216 days = 360 }
				}
			}
		}
	}
}

### Declare War (League vs. Khan)
# Scope = League leader
country_event = {
	id = khan.216 # war_in_heaven.16
	title = war_in_heaven.20.a
	desc = war_in_heaven.22.name # war_in_heaven.16.desc
	picture = GFX_evt_small_space_battle
	show_sound = event_alien_signal
	location = root
	is_triggered_only = yes
	trigger = {
		has_global_flag = war_in_heaven_nonaligned_league
		has_federation = yes
		is_federation_leader = yes # has_country_flag = war_in_heaven_league_leader
		federation = { has_federation_flag = non_aligned_league }
		exists = event_target:raider_khanate
		NOR = {
			# has_global_flag = war_in_heaven_nonaligned_league_war
			has_global_flag = war_in_heaven_seeking_league_leader
			# has_country_flag = war_in_heaven_nonaligned_league_timer
			is_at_war_with = event_target:raider_khanate
		}
	}
	# mean_time_to_happen = { months = 3 }
	immediate = { set_global_flag = war_in_heaven_nonaligned_league_war remove_country_flag = ai_no_wars }
	option = {
		name = war_in_heaven.16.a
		event_target:raider_khanate = {
			if = { # Not on great uprising
				limit = {
					OR = { has_global_flag = war_in_heaven_started has_global_flag = war_in_heaven_ongoing }
					NOT = { is_at_war_with = root }
				}
				# # Against FE
				# random_war = {
				# 	limit = {
				# 		using_war_goal = {
				# 			type = "wg_war_in_heaven"
				# 			owner = event_target:raider_khanate
				# 		}
				# 		any_war_participant = {
				# 			is_same_empire = event_target:FirstSleeper
				# 		}
				# 	}
				# 	prev = {
				# 		every_subject = {
				# 			limit = {
				# 				NOR = {
				# 					has_country_flag = rebelling_satrapy
				# 					is_at_war_with = event_target:FirstSleeper
				# 				}
				# 			}
				# 			join_war = prev
				# 		}
				# 	}
				# }
				# Against League
				declare_war = {
					target = root
					name = "NAME_The_War_in_Heaven"
					attacker_war_goal = "wg_war_in_heaven"
				}
				hidden_effect = {
					every_subject = {
						limit = {
							is_default_or_fallen = yes
							NOR = { has_country_flag = rebelling_satrapy is_at_war_with = root }
						}
						join_war = prev
					}
					if = {
						limit = {
							has_galactic_emperor = no
							CmtTriggerIsKhanCountry = yes
							count_subject = { count > 1 }
						}
						country_event = { id = khan.218 days = 3 } # galcom
					}
				}
			}
		}
		if = {
			limit = { NOT = { is_at_war_with = event_target:raider_khanate } }
			declare_war = {
				target = event_target:raider_khanate
				name = "NAME_The_Civil_War" # "The Great Uprising"
				attacker_war_goal = "wg_satrapy_independence"
			}
		}
		federation = {
			every_member = {
				limit = { OR = { is_subject_of_khan = yes has_country_flag = rebelling_satrapy } }
				set_subject_of = { who = none }
				set_country_flag = rebelling_satrapy
				set_timed_country_flag = { flag = rebellion_cooldown days = @CmtConstKhanLifespan_5e }
				# if = { limit = { has_modifier = "satrapy_of_horde" }
				# 	remove_modifier = "satrapy_of_horde"
				# }
				event_target:raider_khanate = {
					if = {
						limit = { NOT = { is_hostile = prev } }
						set_faction_hostility = { target = prev set_hostile = yes }
					}
				}
			}
		}

		if = {
			limit = { exists = event_target:marauders_garrison_1 }
			event_target:marauders_garrison_1 = {
				every_controlled_fleet = {
					limit = { has_fleet_flag = satrapy_garrison }
					destroy_fleet = this
				}
				every_controlled_fleet = {
					limit = { has_fleet_flag = satrapy_garrison exists = solar_system }
					random_list = {
						5 = { destroy_fleet = this }
						5 = { set_owner = event_target:raider_khanate }
						2 = { set_owner = space_owner }
					}
				}
				destroy_country = yes
			}
		}
	}
}

# Form Galactic Community
country_event = {
	id = khan.217 # Copy of galcom.1
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		NOR = { has_global_flag = galactic_community_founded has_global_flag = galcom_founding_begun }
		count_playable_country = { # Minimum 3 countries
			limit = { is_homicidal = no is_gestalt = no }
			count > 2
		}
		any_playable_country = {
			perc_communications_with_playable > 0.5
			is_homicidal = no
			is_gestalt = no
		}
	}
	immediate = {
		set_global_flag = galcom_founding_begun
		ordered_playable_country = {
			limit = {
				perc_communications_with_playable > 0.5
				is_homicidal = no
				is_gestalt = no
			}
			position = 0
			order_by = trigger:perc_communications_with_playable
			country_event = { id = galcom.2 }
			every_playable_country = {
				limit = {
					NOT = { is_same_empire = prev }
					# has_communications = prev
					is_homicidal = no
				}
				country_event = { id = galcom.2 }
			}
		}
		event_target:global_event_country = {
			country_event = { id = galcom.3 days = 6 }
		}
	}
}

# Turn the Khan into the Galactic Emperor (or at least playable Empire - 3.2).
# This = Khan
country_event = {
	id = khan.218
	hide_window = yes
	is_triggered_only = yes
	trigger = { exists = event_target:raider_khanate is_same_empire = event_target:raider_khanate }
	immediate = {
		if = {
			limit = { merg_is_default_empire = no }
			set_country_type = default
			set_origin = origin_khan_successor
			### Need Naval Capacity
			if = {
				limit = { NOT = { has_tradition = tr_diplomacy_adopt } }
				add_tradition = tr_diplomacy_adopt
				add_tradition = tr_diplomacy_the_federation
				add_tradition = tr_diplomacy_entente_coordination
			}

			if = {
				limit = { has_civic = civic_anarcho_tribalism }
				force_remove_civic = civic_anarcho_tribalism
			}
			else_if = {
				limit = { has_civic = civic_shared_burden }
				force_remove_civic = civic_shared_burden
			}
			else_if = {
				limit = { has_civic = civic_slaver_guilds }
				force_remove_civic = civic_slaver_guilds
			}
			else_if = {
				limit = { has_civic = civic_fanatic_purifiers }
				force_remove_civic = civic_fanatic_purifiers
			}
			if = {
				limit = { NOT = { has_civic = civic_warrior_culture } }
				force_add_civic = civic_warrior_culture
			}

			add_resource = {
				energy =	50000
				alloys =	20000
				minerals =	10000
			}

			every_subject = {
				limit = { is_default_or_fallen = yes is_subject_of_khan = yes }
				set_subject_of = { who = prev preset = preset_tributary }
				# if = { limit = { has_modifier = "satrapy_of_horde" }
				# 	remove_modifier = "satrapy_of_horde"
				# }
			}

			country_event = { id = khan.311 days = 1 } # Reduce Naval Cap.

			## Workaround fix (not be hostile)
			country_event = { id = khan.309 days = 1 }
		}
		if = {
			limit = { has_country_flag = declared_crisis }
			remove_country_flag = declared_crisis
		}

		# Fallback (for some reason not all join)
		if = {
			limit = { exists = event_target:FirstSleeper is_at_war_with = event_target:FirstSleeper }
			remove_country_flag = ai_no_wars
			every_subject = {
				limit = {
					is_default_or_fallen = yes
					NOR = {
						has_country_flag = rebelling_satrapy
						is_at_war = yes
						is_at_war_with = event_target:FirstSleeper
					}
				}
				join_war = root
			}
			# Gets dissolved on emperor (but do it anyway)
			if = {
				limit = { has_federation = yes }
				federation = {
					every_member = {
						limit = {
							NOR = {
								has_country_flag = rebelling_satrapy
								is_at_war = yes
								is_at_war_with = event_target:FirstSleeper
							}
						}
						join_war = root
					}
				}
			}
		}

		if = {
			limit = {
				has_galactic_emperor = no
				count_subject = { count > 1 }
			}
			if = {
				limit = {
					NOR = {
						has_global_flag = galactic_community_founded
						has_global_flag = galcom_founding_begun
						# is_galactic_community_formed = yes
					}
				}
				country_event = { id = khan.217 } # Try to form Galactic Community.
				if = {
					limit = {
						count_playable_country = { # Minimum 3 countries
							limit = { is_homicidal = no is_gestalt = no }
							count > 2
						}
						any_playable_country = {
							perc_communications_with_playable > 0.5
							is_homicidal = no
							is_gestalt = no
						}
					}
					# Call once again later
					country_event = { id = khan.218 days = 18 } # galcom
				}
			}
			else = {
				if = {
					limit = { is_galactic_community_member = no }
					add_to_galactic_community_no_message = yes
				}
				# country_event = { id = custodian.499 }
				if = {
					limit = { exists = event_target:FirstSleeper is_at_war_with = event_target:FirstSleeper }
					country_event = { id = emperor.499 days = 12 }
				}
				else = {
					country_event = { id = emperor.499 days = 60 }
				}
			}
		}
	}
}

# TODO as special project?
# Force integrate subject
country_event = {
	id = khan.219
	# title = DIPLOMACY_INTEGRATION_TITLE
	# desc = ACTION_INTEGRATE_SUBJECT_OFFER_DESC # "§H[Actor.GetName]§! has begun integrating §H[Recipient.GetName]§! into their nation."
	hide_window = yes
	picture = GFX_evt_khan_throne_room
	show_sound = event_conversation
	is_triggered_only = yes
	trigger = {
		exists = event_target:raider_khanate
		is_same_empire = event_target:raider_khanate
		is_overlord = yes
	}
	immediate = {
		ordered_subject = {
			position = 0
			order_by = trigger:fleet_power
			inverse = yes
			limit = {
				is_subject_of_khan = yes
				OR = {
					is_ai = yes
					count_subject = { limit = { is_ai = yes } count = 0 }
				}
			}
			root = { save_event_target_as = new_khanate }
			country_event = { id = marauder.609 days = 30 }		# Fully handover
		}
	}
}

## FINAL UPRISING (289-299)
# The numerical order is upside down in relation to the events happen (Because of the logic of the initial author Kinneyj47)
# This = EVERY human player empire chooses side
# From = Khan
country_event = {
	id = khan.289 # Without FE Awakening
	title = "war_goal_wg_marauder_uprising" # "emperor.101.name" # "The Uprising"
	desc = great_khan_integrate_choice
	picture = GFX_evt_khan_throne_room
	is_triggered_only = yes
	auto_select = yes
	# force_open = yes
	auto_opens = yes
	trigger = {
		exists = event_target:raider_khanate
		exists = from
		NOR = {
			has_country_flag = war_in_heaven_nonaligned_league_timer
			has_active_event = { khan.289 }
		}
		NAND = { has_galactic_emperor = yes is_galactic_emperor = yes }
	}
	immediate = {
		set_country_flag = marauder_diplomacy_engaged
		set_timed_country_flag = { flag = war_in_heaven_nonaligned_league_timer months = 6 }
	}
	after = { hidden_effect = { remove_country_flag = marauder_diplomacy_engaged } }
	option = {
		name = marauder_uprising_now
		hidden_effect = {
			if = {
				limit = { has_federation = yes is_in_federation_with = from }
				leave_alliance = { override_requirements = yes }
			}
			if = {
				limit = { is_variable_set = "planets_lost_to_marauder" }
				multiply_variable = { which = planets_lost_to_marauder value = 0.2 }
			}
			if = {
				limit = { has_country_flag = war_in_heaven_league_leader_declined }
				remove_country_flag = war_in_heaven_league_leader_declined
			}
			if = {
				limit = {
					is_subject_of_khan = yes
					# has_modifier = "satrapy_of_horde"
					NOT = { has_active_event = { marauder.554 } }
				}
				country_event = { id = marauder.554 } # Rebel!?
			}
			# else_if = { limit = { has_modifier = "satrapy_of_horde" }
			# 	remove_modifier = "satrapy_of_horde"
			# }
			from = {
				if = {
					limit = { root = { has_country_flag = rebelling_satrapy } }
					add_opinion_modifier = { who = root modifier = opinion_traitor_to_empire }
				}
				add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_enemy }
				if = {
					limit = { NOT = { is_hostile = root } }
					set_faction_hostility = { target = root set_hostile = yes }
				}
				if = {
					limit = { exists = event_target:marauders_garrison_1 }
					event_target:marauders_garrison_1 = {
						if = {
							limit = { NOT = { is_hostile = root } }
							set_faction_hostility = { target = root set_hostile = yes }
						}
					}
				}
			}
			add_opinion_modifier = { who = from modifier = opinion_war_in_heaven_enemy }

		}
		ai_chance = {
			factor = 2
			modifier = { factor = 20 has_country_flag = war_in_heaven_league_leader_declined }
		}
	}
	option = {
		name = marauder_uprising_stall
		trigger = {
			NOT = { has_country_flag = war_in_heaven_league_leader_declined }
			from = { is_same_empire = event_target:raider_khanate }
		}
		hidden_effect = {
			set_country_flag = war_in_heaven_league_leader_declined
			country_event = {
				id = khan.289
				days = @CmtConstKhanLifespan_3e
				random = @CmtConstKhanLifespan_2e
				scopes = { from = from }
			}
		}
		ai_chance = {
			factor = 0.1
			modifier = { factor = 50 has_origin = "origin_khan_successor" }
		}
	}
}

# UPRISING
# This = EVERY default AI Empire chooses side
# From = Khan
country_event = {
	id = khan.290 # Without FE Awakening
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		exists = event_target:raider_khanate
		exists = from
		NOT = { has_country_flag = war_in_heaven_nonaligned_league_timer }
		NAND = { has_galactic_emperor = yes is_galactic_emperor = yes }
	}
	immediate = {
		# set_timed_country_flag = { flag = war_in_heaven_nonaligned_league_timer months = 6 }
		random_list = {
			# marauder_uprising_now
			20 = {
				modifier = { factor = 20 has_country_flag = war_in_heaven_league_leader_declined }
				if = {
					limit = { has_federation = yes is_in_federation_with = from }
					leave_alliance = { override_requirements = yes }
				}
				if = {
					limit = { is_variable_set = "planets_lost_to_marauder" }
					multiply_variable = { which = "planets_lost_to_marauder" value = 0.2 }
				}
				if = {
					limit = { has_country_flag = war_in_heaven_league_leader_declined }
					remove_country_flag = war_in_heaven_league_leader_declined
				}
				if = {
					limit = {
						is_subject_of_khan = yes
						# has_modifier = "satrapy_of_horde"
						NOT = { has_active_event = { marauder.554 } }
					}
					country_event = { id = marauder.554 days = 1 random = 6 } # Rebel!?
				}
				# else_if = { limit = { has_modifier = "satrapy_of_horde" }
				# 	remove_modifier = "satrapy_of_horde"
				# }
				from = {
					if = {
						limit = { root = { has_country_flag = rebelling_satrapy } }
						add_opinion_modifier = { who = root modifier = opinion_traitor_to_empire }
					}
					add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_enemy }
					if = {
						limit = { NOT = { is_hostile = root } }
						set_faction_hostility = { target = root set_hostile = yes }
					}
					if = {
						limit = { exists = event_target:marauders_garrison_1 }
						event_target:marauders_garrison_1 = {
							if = {
								limit = { NOT = { is_hostile = root } }
								set_faction_hostility = { target = root set_hostile = yes }
							}
						}
					}
				}
				add_opinion_modifier = { who = from modifier = opinion_war_in_heaven_enemy }
			}
			1 = { # marauder_uprising_stall
				modifier = {
					factor = 0
					OR = {
						NOT = { from = { is_same_empire = event_target:raider_khanate } }
						has_country_flag = war_in_heaven_league_leader_declined
					}
				}
				modifier = { factor = 50 has_origin = "origin_khan_successor" }
				set_country_flag = war_in_heaven_league_leader_declined
				country_event = {
					id = khan.290
					days = @CmtConstKhanLifespan_3e
					random = @CmtConstKhanLifespan_2e
					scopes = { from = from }
				}
			}
		}
	}
}

# FE Awakening
# TODO: SOME BROKEN APESHIT GOING ON HERE (by Kinneyj47)
# This = 2nd chance to pick side (every_playable_country)
# From = Khan Marauder (khan.292)
country_event = {
	id = khan.291 # (similar war_in_heaven.4)
	force_open = yes
	title = "FE_war_choice"
	desc = "FE_war_choice_desc"
	picture = GFX_evt_fallen_empire_awakes
	show_sound = event_alien_signal
	location = from.capital_scope
	is_triggered_only = yes
	trigger = {
		exists = root
		is_scope_valid = yes
		NOT = { has_country_flag = war_in_heaven_picked_side }
		has_been_declared_crisis = no
	}

	immediate = { }
	# Horde
	option = {
		name = pick_great_khan
		trigger = {
			merg_is_default_empire = yes
			# is_subject = no
			# is_galactic_community_member = no
			is_zofe_fe = no
			is_galactic_emperor = no
			# opinion_level = { who = event_target:raider_khanate level >= neutral }
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					is_angry_to = event_target:raider_khanate
					opinion_level = { who = event_target:raider_khanate level <= poor }
				}
			}
		}
		if = {
			limit = {
				has_federation = yes
				NOT = { is_in_federation_with = event_target:raider_khanate }
			}
			leave_alliance = { override_requirements = yes }
		}
		join_alliance = {
			who = event_target:raider_khanate
			name = "NAME_Galactic_Horde"
			override_requirements = yes
		}

		hidden_effect = {
			# End subject wars
			if = {
				limit = { is_at_war = yes }
				every_war = {
					limit = {
						is_scope_type = war # TODO because of strange error.
						is_war_participant = { who = root }
						is_war_participant = { who = event_target:raider_khanate }
						OR = {
							any_war_participant = {
								prev = { using_war_goal = { type = wg_marauder_expansion owner = prev } }
							}
							any_war_participant = {
								prev = { using_war_goal = { type = wg_great_expansion owner = prev } }
							}
						}
					}
					prev = { set_truce = { target = prev type = war } }
					remove_war_participant = root
				}
			}
			if = {
				limit = {
					OR = {
						has_origin = "origin_khan_successor"
						any_agreement = { agreement_preset = preset_war_satrapy }
						CmtTriggerIsMarauder = yes
					}
				}
				join_war = event_target:raider_khanate
			}
			else = {
				event_target:raider_khanate = {
					random_war = {
						limit = { using_war_goal = { type = "wg_war_in_heaven" owner = prev } }
						root = {
							join_war_on_side = { war = prev side = prevprev }
						}
					}
				}
			}

			if = {
				limit = { has_country_flag = rebelling_satrapy }
				remove_country_flag = rebelling_satrapy
				set_timed_country_flag = { flag = rebellion_cooldown days = @CmtConstKhanLifespan_5e }
			}
			event_target:raider_khanate = {
				if = {
					limit = { is_hostile = root }
					country_event = { id = khan.308 } # Set friendly
				}
			}

			set_country_flag = war_in_heaven_picked_side
			set_country_flag = war_in_heaven_league_leader_declined
			add_opinion_modifier = { who = from modifier = opinion_war_in_heaven_ally }
			add_opinion_modifier = { who = event_target:FirstSleeper modifier = opinion_war_in_heaven_enemy }
			event_target:FirstSleeper = { add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_enemy } }
			from = {
				add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_ally }
				copy_random_tech_from = { who = prev }
				prev = { copy_random_tech_from = { who = prev } }
			}
			if = {
				limit = {
					exists = federation
					federation = { NOT = { has_federation_flag = great_galactic_horde } }
				}
				federation = {
					set_federation_flag = great_galactic_horde
					if = {
						limit = {
							NOT = { has_federation_type = military_federation }
							OR = {
								prev = {
									is_ai = yes
									count_federation_ally = { limit = { is_ai = no } count = 0 }
								}
								has_federations_dlc = yes
							}
						}
						set_federation_type = military_federation
					}
					if = {
						limit = { has_federation_perk = cohesion_join_1 }
						add_cohesion = 50
					}
					else = { add_cohesion = 100 }
					add_federation_experience = 4200 # Level 3 with some breathing room.
				}
			}
		}
	}
	# FE
	option = {
		name = pick_fe
		trigger = {
			merg_is_default_empire = yes
			# is_subject = no
			# is_galactic_community_member = no
			exists = event_target:FirstSleeper
			is_zofe_fe = no
			is_galactic_emperor = no
		}
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				OR = {
					NOT = { exists = event_target:FirstSleeper }
					is_subject = yes
					is_angry_to = event_target:FirstSleeper
					opinion_level = { who = event_target:FirstSleeper level <= poor }
					is_homicidal = yes
				}
			}
		}
		# if = { limit = { NOT = { is_at_war_with = event_target:raider_khanate } }
		join_war = event_target:FirstSleeper
		if = {
			limit = { is_zofe_ae = yes }		## For ZoFE
			every_subject = {
				limit = { merg_is_default_empire = yes }
				join_war = event_target:FirstSleeper
			}
		}
		else = {
			event_target:FirstSleeper = {
				switch = { trigger = has_ethic
					ethic_fanatic_xenophobe = { prev = { set_subject_of = { who = prev preset = preset_thrall } } }
					ethic_fanatic_xenophile = { prev = { set_subject_of = { who = prev preset = preset_signatory } } }
					ethic_fanatic_spiritualist = { prev = { set_subject_of = { who = prev preset = preset_dominion } } }
					ethic_fanatic_materialist = { prev = { set_subject_of = { who = prev preset = preset_satellite } } }
				}
			}
		}
		hidden_effect = {
			set_country_flag = war_in_heaven_picked_side
			set_country_flag = war_in_heaven_league_leader_declined
			add_opinion_modifier = { who = event_target:FirstSleeper modifier = opinion_war_in_heaven_ally }
			add_opinion_modifier = { who = from modifier = opinion_war_in_heaven_enemy }
			from = { add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_enemy } }
			event_target:FirstSleeper = {
				add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_ally }
				copy_random_tech_from = { who = prev }
				prev = { copy_random_tech_from = { who = prev } }
			}
		}
	}
	# Non-Aligned League
	option = {
		name = "marauder.554.a" # war_in_heaven.4.c "We will not take sides in this conflict."
		trigger = { is_subject = no }
		ai_chance = {
			factor = 10
			# TODO: could be more dynamic value.
			modifier = { factor = 0.5 fleet_power < 25000 }
			modifier = { factor = 0.5 fleet_power < 50000 }
			modifier = { factor = 2 fleet_power > 80000 }
			modifier = { factor = 2 fleet_power > 100000 }
			modifier = { factor = 2 fleet_power > 125000 }
			modifier = { factor = 5 fleet_power > 200000 }
			modifier = { factor = 5 has_federation = yes }
			modifier = {
				factor = 3
				any_country = { is_in_federation_with = root fleet_power > 100000 }
			}
			modifier = {
				factor = 2
				any_playable_country = { is_ai = no is_in_federation_with = root }
			}
		}

		## Vanilla war_in_heaven.xx short docu
		# .3 => .7 Galactic Emperor
		# MTTH = .12 Find a leader (special if not .7)
		# 	.12 => .13 set_global_flag = war_in_heaven_seeking_league_leader
		# 	.13 => .19
		# MTTH = .14 AI will try to join the League
		# .14/.19 => .15 join_alliance (create)
		# MTTH = .16 declar war
		# .22 nofify declined
		# FE via MTTH war_in_heaven.12
		if = {
			limit = { NOR = { has_global_flag = war_in_heaven_seeking_league_leader has_country_flag = war_in_heaven_league_leader_declined } }
			# declare_war = {
			# 	target = from
			# 	name = "NAME_The_War_in_Heaven"
			# 	attacker_war_goal = "wg_war_in_heaven"
			# }
			# if = {
			# 	limit = { exists = event_target:FirstSleeper }
			# 	declare_war = {
			# 		target = event_target:FirstSleeper
			# 		name = "NAME_The_War_in_Heaven"
			# 		attacker_war_goal = "wg_war_in_heaven"
			# 	}
			# }
			# from = {
			# 	declare_war = {
			# 		target = root
			# 		name = "NAME_The_War_in_Heaven"
			# 		attacker_war_goal = "wg_war_in_heaven"
			# 	}
			# }
			set_timed_global_flag = { flag = war_in_heaven_ongoing days = @CmtConstKhanLifespan_2e }
			from = {
				country_event = { id = khan.212 days = 4 random = 8 } # Create NAL
			}
		}
		hidden_effect = {
			# set_country_flag = war_in_heaven_picked_side
			set_country_flag = war_in_heaven_nonaligned_league_check
			from = {
				if = {
					limit = { NOT = { is_hostile = root } }
					set_faction_hostility = { target = root set_hostile = yes }
				}
				if = {
					limit = { exists = event_target:marauders_garrison_1 }
					event_target:marauders_garrison_1 = {
						if = {
							limit = { NOT = { is_hostile = root } }
							set_faction_hostility = { target = root set_hostile = yes }
						}
					}
				}
				if = {
					limit = { root = { has_country_flag = rebelling_satrapy } }
					add_opinion_modifier = { who = root modifier = opinion_traitor_to_empire }
				}
				add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_enemy }
			}
			add_opinion_modifier = { who = from modifier = opinion_war_in_heaven_enemy }
			add_opinion_modifier = { who = event_target:FirstSleeper modifier = opinion_war_in_heaven_enemy }
			event_target:FirstSleeper = { add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_enemy } }
		}
	}
	option = {
		name = war_in_heaven.4.c.2
		trigger = { is_subject = no }
		ai_chance = { factor = 0 }
	}
	option = {
		name = war_in_heaven.4.d
		trigger = { is_subject = yes }
		if = {
			limit = {
				exists = event_target:FirstSleeper
				overlord = { is_same_empire = event_target:FirstSleeper }
			}
			join_war = event_target:FirstSleeper
		}
		else_if = {
			limit = { overlord = { is_same_empire = event_target:raider_khanate } }
			if = {
				limit = {
					OR = {
						has_origin = "origin_khan_successor"
						any_agreement = { agreement_preset = preset_war_satrapy }
						CmtTriggerIsMarauder = yes
					}
				}
				join_war = from
			}
			else = {
				from = {
					random_war = {
						limit = { using_war_goal = { type = "wg_war_in_heaven" owner = prev } }
						root = {
							join_war_on_side = { war = prev side = prevprev }
						}
					}
				}
			}
		}
		ai_chance = {
			factor = 100
			modifier = { factor = 0 is_subject = no }
		}
	}
	option = {		## For ZoFE
		name = war_in_heaven.4.e
		trigger = { is_zofe_ae = yes exists = event_target:FirstSleeper }
		ai_chance = {
			factor = 20
			modifier = { factor = 0.5 fleet_power < 25000 }
			modifier = { factor = 0.5 fleet_power < 50000 }
			modifier = { factor = 2 fleet_power > 80000 }
			modifier = { factor = 2 fleet_power > 100000 }
			modifier = { factor = 2 fleet_power > 125000 }
		}
		hidden_effect = {
			add_opinion_modifier = { who = from modifier = opinion_war_in_heaven_enemy }
			from = { add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_enemy } }
			add_opinion_modifier = { who = event_target:FirstSleeper modifier = opinion_war_in_heaven_enemy }
			event_target:FirstSleeper = { add_opinion_modifier = { who = root modifier = opinion_war_in_heaven_enemy } }
		}
		declare_war = {
			target = event_target:FirstSleeper
			name = "NAME_The_War_in_Heaven"
			attacker_war_goal = "wg_war_in_heaven"
		}
		declare_war = {
			target = from
			name = "NAME_The_War_in_Heaven"
			attacker_war_goal = "wg_war_in_heaven"
		}
		if = {
			limit = { is_overlord = yes }
			every_subject = {
				limit = { merg_is_default_empire = yes }
				join_war = root
			}
		}
	}
	option = {
		name = war_in_heaven.4.f # ZoFE
		trigger = { is_zofe_fe = yes }
		ai_chance = {
			factor = 50
			modifier = { factor = 0 is_zofe_fe = no }
		}
	}
}

# FE Awakening - start WiH
# Assume at this point that the Great Khan is neutral to the empires.
# This = Khan Marauder (From = Marauder khan.295)
country_event = {
	id = khan.292 # (similar war_in_heaven.3 (MTTH))
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		set_global_flag = war_in_heaven_debug
		remove_global_flag = sleepers_awake_happened
		# remove_global_flag = war_in_heaven_started

		every_war = {
			limit = {
				is_scope_type = war # TODO because of strange error.
				is_war_participant = { who = root }
			}
			end_war_effect = yes
		}

		random_country = {
			limit = {
				is_fallen_empire = yes
				NOR = { is_at_war_with = root is_gestalt = yes }
			}
			weights = {
				base = 1
				modifier = { add = 2 merg_is_fallen_empire = yes }
			}

			set_timed_global_flag = { flag = sleepers_awake_happened days = @CmtConstKhanLifespan_1f }
			remove_global_flag = sleepers_awake_rival_waking

			save_global_event_target_as = FirstSleeper
			set_timed_country_flag = { flag = ai_no_wars days = 3592 }
			set_country_flag = sleepers_awake_ancient_rival # 2nd FE Hack?
			set_country_flag = sleepers_awake_first
			set_country_flag = sleepers_awake_first_sleeper

			country_event = { id = war_in_heaven.1 }
			country_event = { id = fallen_empires_awakening.3 days = 3 }

			root = {
				declare_war = {
					target = prev
					name = "NAME_The_War_in_Heaven" # "The Great Khan's Gamble"
					attacker_war_goal = "wg_war_in_heaven"
				}
				if = {
					limit = { NOT = { is_hostile = prev } }
					set_faction_hostility = { target = prev set_hostile = yes }
				}
			}
			if = {
				limit = { exists = event_target:marauders_garrison_1 }
				event_target:marauders_garrison_1 = {
					join_war = root
					every_country = {
						limit = { is_hostile = root is_subject_of_khan = no }
						prev = {
							set_faction_hostility = { target = prev set_hostile = yes }
						}
					}
				}
			}
		}
		# Clear for MTTH war_in_heaven.12
		remove_global_flag = war_in_heaven_nonaligned_league
		remove_global_flag = war_in_heaven_seeking_league_leader

		# set_global_flag = war_in_heaven_debug
		set_global_flag = war_in_heaven_started
		set_global_flag = war_in_heaven_ongoing
		set_timed_global_flag = { flag = war_in_heaven_recently_started years = 15 }

		set_country_flag = sleepers_awake_first_sleeper
		save_global_event_target_as = SecondSleeper
		set_timed_country_flag = { flag = ai_no_wars days = 3592 }

		## Choose to be Rebel or Satrapy.
		every_playable_country = {
			limit = { NOT = { is_same_empire = root } }
			if = { limit = { is_ai = yes }
				set_timed_country_flag = { flag = ai_no_wars days = 3592 }
			}
			if = {
				limit = { is_variable_set = "planets_lost_to_marauder" }
				multiply_variable = { which = "planets_lost_to_marauder" value = 0.2 }
			}
			# if = { limit = { has_modifier = "satrapy_of_horde" }
			# 	remove_modifier = "satrapy_of_horde"
			# }
			country_event = { id = khan.291 days = 7 } # 2nd chance to pick side
		}

		## Pick side and join war.
		if = {
			limit = { has_galactic_emperor = no }
			every_playable_country = {
				# limit = { }
				country_event = { id = war_in_heaven.4 days = 1 }
			}
			country_event = { id = khan.218 days = 8 } # galcom
		}
		else = {
			every_playable_country = {
				limit = { is_galactic_community_member = yes }
				country_event = { id = war_in_heaven.7 days = 1 } # Start 3rd party war
			}
			every_playable_country = {
				limit = { is_galactic_community_member = no }
				country_event = { id = war_in_heaven.4 days = 1 }
			}
		}
		observer_event = { id = observer.76 }
	}
}

# FE AWAKENING Notify
# This = subject (is_ai = no)
# From = Marauder (khan.295)
country_event = {
	id = khan.293
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes
	title = "greatkhan_diplo_header"
	desc = "great_khan_fe_war"
	picture_event_data = { portrait = event_target:great_khan room = khorgis_khan_1_room }
	trigger = {
		# NOT = { has_country_flag = marauder_diplomacy_engaged }
		exists = event_target:raider_khanate
	}
	# immediate = {
	# 	set_country_flag = marauder_diplomacy_engaged
	# }
	# after = {
	# 	hidden_effect = {
	# 		remove_country_flag = marauder_diplomacy_engaged
	# 		if = {
	# 			limit = {
	# 				is_subject_of_khan = yes
	# 				# has_modifier = "satrapy_of_horde"
	# 				NOT = { has_active_event = { marauder.554 } }
	# 			}
	# 			country_event = { id = marauder.554 days = 8 } # Rebel?
	# 			# set_subject_of = { who = none }
	# 			# set_country_flag = rebelling_satrapy # If choosen Horde gets removed.
	# 			# set_timed_country_flag = { flag = rebellion_cooldown days = @CmtConstKhanLifespan_5e }
	# 		}
	# 	}
	# }
	option = { name = great_khan_fe_war_response }
}

# FINAL UPRISING NOTIFY (khan.290 - is_ai = no)
country_event = {
	id = khan.294
	title = "greatkhan_diplo_header"
	desc = great_khan_integrate_announcement
	diplomatic = yes
	picture_event_data = { portrait = event_target:great_khan room = khorgis_khan_1_room }
	is_triggered_only = yes
	# force_open = yes
	auto_opens = yes
	# major = yes
	# major_trigger = { is_ai = no }
	trigger = {
		# NOT = { has_country_flag = marauder_diplomacy_engaged }
		exists = event_target:raider_khanate
		NOT = { has_active_event = { khan.294 } }
	}
	# immediate = { set_country_flag = marauder_diplomacy_engaged }
	# after = {
	# 	hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	# }
	option = { name = great_khan_integrate_response }
}

# START FE AWAKENING
# Great Khan lets his subjects know what is coming khan.292
# This = Marauder (From khan.296)
country_event = {
	id = khan.295
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = sleepers_awake_rival_waking
		# TODO observer_event ?
		# Notify only?
		every_subject = {
			limit = { NOR = { is_ai = yes has_active_event = { khan.293 } } }
			country_event = { id = khan.293 }
		}
		country_event = { id = khan.292 days = @CmtConstKhanLifespan_5f random = @CmtConstKhanLifespan_3f }
	}
}

# great_khan_wins
# Random Future (WiH / Uprising)
# This = Marauder
country_event = {
	id = khan.296
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_global_flag = great_khan_wins exists = event_target:raider_khanate }
	immediate = {
		if = {
			limit = { has_global_flag = khan_no_die }
			remove_global_flag = khan_no_die
		}
		if = {
			limit = { has_country_flag = marauder600_happened }
			remove_country_flag = marauder600_happened
		}
		if = {
			limit = { has_country_flag = CmtFlagKhanNoDieCountry }
			remove_country_flag = CmtFlagKhanNoDieCountry
		}
		if = {
			limit = { has_country_flag = khan_dead_event_fine }
			remove_country_flag = khan_dead_event_fine
		}
		## Give Khan new Life for longer War?
		if = {
			limit = {
				OR = {
					check_variable = { which = CmtVarKhanRemainingLive value < 1 }
					check_variable = { which = CmtVarKhanRemainingLive value > 3 }
				}
			}
			set_variable = { which = CmtVarKhanRemainingLive value = 1 } ## Not CmtGlobalVar
		}

		## Give Khan Lifespan for longer War (check_variablevenerable)
		event_target:CmtGlobalVar = {
			if = {
				limit = { check_variable = { which = CmtVarKhanLifespan value < 4 } }
				set_variable = { which = CmtVarKhanLifespan value = 2 }
				set_timed_global_flag = { flag = khan_no_die days = @CmtConstKhanLifespan_2a }
				prev = {
					set_timed_country_flag = { flag = CmtFlagKhanNoDieCountry days = @CmtConstKhanLifespan_2a }
					set_timed_country_flag = { flag = khan_dead_age days = @CmtConstKhanLifespan_2a } # Some hack
					country_event = { id = marauder.514 days = @CmtConstKhanLifespan_3c random = @CmtConstKhanLifespan_3d }
				}
			}
			else_if = {
				limit = { check_variable = { which = CmtVarKhanLifespan value < 5 } }
				set_variable = { which = CmtVarKhanLifespan value = 3 }
				set_timed_global_flag = { flag = khan_no_die days = @CmtConstKhanLifespan_3a }
				prev = {
					set_timed_country_flag = { flag = CmtFlagKhanNoDieCountry days = @CmtConstKhanLifespan_3a }
					set_timed_country_flag = { flag = khan_dead_age days = @CmtConstKhanLifespan_3a } # Some hack
					country_event = { id = marauder.514 days = @CmtConstKhanLifespan_4c random = @CmtConstKhanLifespan_4d }
				}
			}
			else_if = {
				limit = { check_variable = { which = CmtVarKhanLifespan value < 6 } }
				set_variable = { which = CmtVarKhanLifespan value = 4 }
				set_timed_global_flag = { flag = khan_no_die days = @CmtConstKhanLifespan_4a }
				prev = {
					set_timed_country_flag = { flag = CmtFlagKhanNoDieCountry days = @CmtConstKhanLifespan_4a }
					set_timed_country_flag = { flag = khan_dead_age days = @CmtConstKhanLifespan_4a } # Some hack
					country_event = { id = marauder.514 days = @CmtConstKhanLifespan_5c random = @CmtConstKhanLifespan_5d }
				}
			}
			### Unify All Marauders (Final War)
			set_variable = { which = CmtVarKhanMultiple value = 5 }
		}
		save_event_target_as = new_khanate

		every_country = {
			limit = { is_country_type = dormant_marauders }
			switch = { trigger = has_country_flag
				marauder_1 = { every_playable_country = {
					limit = { CmtTriggerCountryHiringMarauder1 = yes }
					set_country_flag = CmtFlagHiringMarauder1
				} root = { set_country_flag = marauder_1 } }
				marauder_2 = { every_playable_country = {
					limit = { CmtTriggerCountryHiringMarauder2 = yes }
					set_country_flag = CmtFlagHiringMarauder2
				} root = { set_country_flag = marauder_2 } }
				marauder_3 = { every_playable_country = {
					limit = { CmtTriggerCountryHiringMarauder3 = yes }
					set_country_flag = CmtFlagHiringMarauder3
				} root = { set_country_flag = marauder_3 } }
			}
			set_country_type = ruined_marauders
		}
		every_playable_country = {
			limit = {
				OR = {
					has_country_flag = CmtFlagHiringMarauder1
					has_country_flag = CmtFlagHiringMarauder2
					has_country_flag = CmtFlagHiringMarauder3
				}
			}
			country_event = { id = marauder.77 days = 18 }
		}

		country_event = { id = marauder.78 days = 6 }	## Mercenaries Join the Great Khan.

		every_country = {
			limit = {
				is_default_or_fallen = yes
				NOT = { is_same_empire = root }
			}
			# add_opinion_modifier = { who = root modifier = opinion_destroying_galaxy }
			add_opinion_modifier = { who = root modifier = opinion_doomed_us_all }
			add_opinion_modifier = { who = root modifier = triggered_dc_opinion_of_assimilators }
			root = { add_opinion_modifier = { who = prev modifier = opinion_prey } }
		}
		## 50% chance integrating Satrapies - sparking a galaxy wide uprising.
		## 50% chance of a WiH with a FE.
		random_list = {
			50 = { # Final immediately
				every_playable_country = {
					limit = {
						NOR = {
							is_same_empire = root
							has_been_declared_crisis = yes
							is_zofe_fe = yes
						}
					}
					if = {
						limit = { is_ai = no }
						country_event = { id = khan.289 days = 3 random = 3 } # Let choose side!?
					}
					else = {
						country_event = { id = khan.290 days = 3 random = 3 } # Let choose side!?
					}
					add_opinion_modifier = { who = root modifier = opinion_destroying_galaxy }
				}
				if = {
					limit = { NOT = { has_active_event = { khan.203 } } }
					country_event = { id = khan.203 days = @CmtConstKhanLifespan_2f random = @CmtConstKhanLifespan_2f } # START PREPARE FINAL UPRISING
				}
				every_playable_country = {
					limit = { is_ai = no }
					country_event = { id = khan.294 } # Major Notify
				}
				# TODO observer_event ?
				modifier = {
					factor = 0.75
					num_fallen_empires_setting > 0
					any_country = { merg_is_fallen_empire = yes }
				}
				modifier = {
					factor = 0.75
					num_fallen_empires_setting > 1
					count_country = { count > 1 limit = { merg_is_fallen_empire = yes } }
				}
				modifier = {
					factor = 0
					has_global_flag = war_in_heaven_debug # Test WiH
					NOT = { has_global_flag = CmtFlagDebugMode }
				}
			}
			50 = { # FE Awakening
				country_event = { id = khan.295 days = @CmtConstKhanLifespan_2f random = @CmtConstKhanLifespan_2f }
				# modifier = {
				# 	factor = 0
				# 	has_global_flag = CmtFlagDebugMode # Test satrapy uprising
				# }
				modifier = {
					factor = 0
					OR = {
						num_fallen_empires_setting < 1
						mid_game_years_passed < 50 # Since v3.8.4
						has_leviathans = no
						AND = {
							NOT = { has_global_flag = endgame_crisis_early_start }
							default_endgame_early_start_triggers = yes
						}
						NOT = { any_country = {
							OR = {
								is_valid_fallen_empire_for_task = yes
								AND = {
									is_fallen_empire = yes
									is_gestalt = no
									fleet_power > 90000
								}
							}
						} }

					}
				}
				modifier = {
					factor = 0.5
					end_game_years_passed < 0 # Since v3.8.4
				}
				modifier = {
					factor = 1.5
					any_playable_country = { fleet_power > 140000 }
				}
				modifier = { factor = 1.5 num_fallen_empires > 1 num_fallen_empires < 3 }
				modifier = { factor = 2 num_fallen_empires > 2 num_fallen_empires < 4 }
				modifier = { factor = 3 num_fallen_empires > 3 }
			}
		}
	}
}

# Great Khan has won Notify + Reinforcement
country_event = {
	id = khan.297
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes
	title = "greatkhan_diplo_header"
	desc = "great_khan_wins_announcement"
	picture_event_data = { portrait = event_target:great_khan room = khorgis_khan_1_room }
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		exists = event_target:raider_khanate
		NOT = { has_country_flag = marauder_diplomacy_engaged }
	}
	immediate = {
		set_country_flag = marauder_diplomacy_engaged
		# For every non AI!?
		event_target:raider_khanate = {
			country_event = { id = khan.870 }
			# if = {
			# 	limit = { has_country_flag = has_machinesmith }
			# 	country_event = { id = khan.870 } # Improved Reinforcement
			# } else = {
			# 	country_event = { id = khan.869 } # Regular Reinforcement
			# }
		}
	}
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = { name = great_khan_wins_announcement_response }
}

# Notify only (is_ai = no) great_khan has won
country_event = {
	id = khan.298
	is_triggered_only = yes
	title = "great_khan_wins"
	desc = "great_khan_wins_desc"
	picture = GFX_evt_khan_throne_room
	show_sound = event_radio_chatter
	force_open = yes
	# major = yes
	# major_trigger = { is_ai = no }
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		exists = event_target:raider_khanate
		NOR = { has_active_event = { khan.297 khan.298 } }
		# NOT = { has_country_flag = marauder_diplomacy_engaged }
	}
	# immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = {
			# remove_country_flag = marauder_diplomacy_engaged
			country_event = { id = khan.297 }
		}
	}
	option = { name = great_khan_wins_response }
}

# Check for great_khan_wins (MTTH 360)
# This = Marauder
country_event = {
	id = khan.299
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		mid_game_years_passed > 1
		NOR = {
			has_global_flag = great_khan_wins
			has_global_flag = war_in_heaven_ongoing
			has_global_flag = great_khan_dead
		}
		is_overlord = yes
		CmtTriggerIsKhanCountry = yes
		OR = {
			AND = { exists = event_target:great_khan exists = event_target:great_khan.fleet }
			any_owned_fleet = {
				has_fleet_flag = khan_fleet
				exists = leader
				leader = { has_leader_flag = great_khan }
			}
		}
	}
	immediate = {
		if = {
			limit = { count_federation = { count > 0 } }
			# random_federation = { save_event_target_as = exists_federation
			set_variable = { which = exists_federation value = 1 }
			# log="only one federation"
		}
		else = { set_variable = { which = exists_federation value = 0 } }

		set_variable = { which = inc_fleet_power value = 0 }
		every_playable_country = {
			limit = { is_subject = no fleet_power > 12000 }
			export_trigger_value_to_variable = { trigger = fleet_power variable = inc_fleet_power }
			prev = { change_variable = { which = inc_fleet_power value = prev.inc_fleet_power } }
			clear_variable = inc_fleet_power
		}
		change_variable = { which = inc_fleet_power value = -48000 }
		# log="Check great_khan_wins: global fleet_power \\[This.inc_fleet_power]"
		export_trigger_value_to_variable = { trigger = fleet_power variable = khan_fleet_power }

		# Since 3.1 - sum subject galaxy_percentage to Khan.
		# set_variable = { which = khan_galaxy_pct value = trigger:galaxy_percentage }
		export_trigger_value_to_variable = { trigger = galaxy_percentage variable = khan_galaxy_pct }
		every_subject = {
			limit = { is_default_or_fallen = yes NOT = { has_country_flag = rebelling_satrapy } }
			# export_trigger_value_to_variable = { trigger = galaxy_percentage variable = khan_galaxy_pct }
			# prev = { change_variable = { which = khan_galaxy_pct value = prev.khan_galaxy_pct } }
			prev = { change_variable = { which = khan_galaxy_pct value = prev.trigger:galaxy_percentage } }
		}
		# log="Check great_khan_wins: galaxy_percentage \\[This.khan_galaxy_pct]"

		if = {
			limit = {
				# galaxy_percentage > 0.33
				OR = {
					check_variable = { which = khan_galaxy_pct value > 0.5 }
					check_variable = { which = khan_fleet_power value > inc_fleet_power }
					count_playable_country = {
						limit = {
							is_subject = no
							has_been_declared_crisis = no
							fleet_power > 28000
							OR = {
								check_variable = { which = exists_federation value = 0 }
								AND = {
									check_variable = { which = exists_federation value = 1 }
									OR = { has_federation = no is_federation_leader = yes }
								}
							}
						}
						count < 3
					}
				}
			}
			# has_defensive_pact = root
			# country_event = { id = khan.298 } # Notify major global
			every_playable_country = {
				if = {
					limit = { NOR = { is_ai = yes has_active_event = { khan.297 khan.298 } } }
					country_event = { id = khan.298 }
				}
			}
			# TODO observer_event ?
			set_global_flag = great_khan_wins
			country_event = {
				id = khan.296
				days = 1440 # @CmtConstKhanLifespan_2d # 8 years
				random = @CmtConstKhanLifespan_5f
				# days = @CmtConstKhanLifespan_5d # Original 25 years???
				# random = @CmtConstKhanLifespan_2d
			}
		}
		clear_variable = exists_federation
		# TODO something like id = origin.50

		# Subject hostile fallback (if possible something is going wrong)
		random_subject = {
			limit = {
				NOT = { has_country_flag = rebelling_satrapy }
				is_hostile = prev
			}
			weights = { base = 1 modifier = { add = 2 is_ai = no } }
			prev = {
				country_event = { id = khan.308 days = -1 scopes = { from = prev } } # Set friendly
			}
		}
	}
}

# Set Mod Flag (on_game_start)
event = {
	id = khan.300
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		set_global_flag = gf_great_khan_active
		log="The Great Khan Expanded loaded"
		# Config only for minimal compatibility Crisis Manager.
		if = {
			limit = {
				exists = event_target:global_event_country
				host_has_dlc = "Apocalypse"
				NOR = { exists = event_target:CmtGlobalVar has_global_flag = CmtFlagActivated }
			}
			# if = { limit = { NOT = { exists = event_target:global_event_country } }
			# 	random_country = { limit = { is_country_type = global_event }
			# 		save_global_event_target_as = global_event_country
			# 	}
			# }
			event_target:global_event_country = {
				set_variable = { which = CmtVarKhanMultiple value = 2 }
				set_variable = { which = CmtVarKhanInterval value = 0 }
				set_variable = { which = CmtKhanEarliestMgpy value = 10 }
				set_variable = { which = CmtVarKhanLatestEgpy value = 0 }
				set_variable = { which = CmtVarKhanTriggerProbability value = 2 }
				set_variable = { which = CmtVarKhanVengeance value = 2 }
				set_variable = { which = CmtVarKhanResurgence value = 1 }
				set_variable = { which = CmtVarKhanLifespan value = 3 }
				set_variable = { which = CmtVarReinforceCycle_Khan value = 1 }
				set_variable = { which = CmtVarKhanPostDeathSummary value = 1 }
				# Crisis Power
				set_variable = { which = CmtVarFleetPower_Khan value = 1.5 }
				set_variable = { which = CmtVarCombatFleetNumber_Khan value = 1.5 }
				set_variable = { which = CmtVarArmyPower_Khan value = 1.5 }
				set_variable = { which = CmtVarArmyNumber_Khan value = 1.5 }
				set_variable = { which = CmtVarConstructorNumber_Khan value = 1.5 }
				save_global_event_target_as = CmtGlobalVar
				if = { limit = { has_global_flag = expanded_spaceborne_installed }
					# set_variable = { which = CmtVarFleetPower_Khan value = 2 }
					set_variable = { which = CmtVarCrisisPower_Midgame value = 4 }
					CmtEffectDifficulty_MidgameVeryHard = yes
				}
			}
		}

		if = { # Workaround bugfix (unknown reason on saveload): Khan fights own subjects (seems since 3.1)
			limit = { has_global_flag = marauder_crisis_ongoing exists = event_target:raider_khanate }
			event_target:raider_khanate = {
				# log="The Great Khan exists"
				## Temp fix immortal Khan without Khan.
				## Removed on v3.8
				# if = {
				# 	limit = {
				# 		has_global_flag = great_khan_dead
				# 		OR = {
				# 			has_country_flag = CmtFlagKhanNoDieCountry
				# 			has_global_flag = khan_no_die
				# 		}
				# 		NOT = { has_country_flag = khan_dead_event_fine }
				# 		OR = {
				# 			NAND = {
				# 				exists = event_target:great_khan_ruler
				# 				event_target:great_khan_ruler = { has_leader_flag = great_khan }
				# 			}
				# 			NAND = {
				# 				exists = event_target:great_khan
				# 				event_target:great_khan = { has_leader_flag = great_khan }
				# 			}
				# 		}
				# 	}
				# 	if = { limit = { exists = event_target:great_khan }
				# 		event_target:great_khan = {
				# 			set_leader_flag = great_khan
				# 			save_event_target_as = old_khan
				# 		}
				# 	} else_if = { limit = { exists = ruler }
				# 		ruler = {
				# 			set_leader_flag = great_khan
				# 			save_event_target_as = old_khan
				# 		}
				# 	} else_if = {
				# 		limit = {
				# 			any_owned_leader = { has_leader_flag = great_khan }
				# 		}
				# 		random_owned_leader = {
				# 			limit = { has_leader_flag = great_khan }
				# 			save_event_target_as = old_khan
				# 		}
				# 	} else = {
				# 		random_owned_leader = {
				# 			limit = {
				# 				leader_class = commander
				# 				is_event_leader = no
				# 			}
				# 			weights = {
				# 				base = 1
				# 				modifier = { add = 1 leader_age > 85 }
				# 				modifier = { add = 2 is_idle = yes }
				# 				modifier = { add = 3 has_level < 3 }
				# 				modifier = { add = 1 gender = female } # hehe
				# 			}
				# 			set_leader_flag = great_khan
				# 			save_event_target_as = old_khan
				# 		}
				# 	}
				# 	if = { limit = { exists = event_target:old_khan }
				# 		country_event = {
				# 			id = marauder.711
				# 			days = 14
				# 			scopes = { from = event_target:old_khan }
				# 		}
				# 	} else = { log="FAIL: Can't find any current Khan!?!" }
				# }
				# Fix ongoing hostility (is_hostile seems not immediately working on load)
				# if = { limit = { has_country_flag = declared_crisis }
				# 	remove_country_flag = declared_crisis
				# }
				country_event = { id = khan.309 days = 4 } # Friendly to be sure
				# TODO TEMP FIX KHAN NO RESPAWN.
				country_event = { id = marauder.507 days = 105 random = 80 }

				if = {
					limit = {
						count_owned_fleet = { count = 0 }
						count_controlled_planet = { count = 0 }
					}
					remove_global_flag = marauder_crisis_ongoing
					clear_global_event_target = raider_khanate
					destroy_country = yes
				}
				else_if = { # Fix never ending total war
					limit = { is_country_type = awakened_marauders }
					every_controlled_planet = {
						limit = {
							has_owner = yes
							NOT = { is_owned_by = prev }
						}
						set_owner = prev
					}
					country_event = { id = khan.312 days = 4 } # Create Garrison Dummy Country
					# Fix cleared global targets (for unknown reason)
					country_event = { id = marauder.78 days = 2 }	## Mercenaries Join the Great Khan.
				}
				else_if = {
					limit = { has_global_flag = great_khan_wins }
					if = { limit = { is_at_war = yes }
						random_war = {
							limit = {
								is_scope_type = war # TODO because of strange error.log!?
								is_war_participant = { who = prev }
								any_war_participant = {
									prev = { using_war_goal = { type = wg_marauder_expansion owner = prev } }
								}
							}
							prev = { set_truce = { target = prev type = war } }
							end_war_effect = yes
						}
						random_war = {
							limit = {
								is_scope_type = war # TODO because of strange error.log!?
								is_war_participant = { who = prev }
								any_war_participant = {
									prev = { using_war_goal = { type = wg_great_expansion owner = prev } }
								}
							}
							prev = { set_truce = { target = prev type = war } }
							remove_war_participant = root
						}
					}
				}
				else_if = {
					limit = { has_origin = "origin_khan_successor" }
					if = {
						limit = { has_global_flag = war_in_heaven_ongoing }
						# Dissolve Marauders again
						country_event = { id = marauder.600 days = 5 }
					}
					else_if = {
						limit = { has_federation = yes }
						leave_alliance = { override_requirements = yes apply_opinion_penalty = yes }
					}
				}
				if = {
					limit = {
						exists = event_target:marauders_garrison_1
						event_target:marauders_garrison_1 = { is_country_type = faction }
					}
					event_target:marauders_garrison_1 = { set_country_type = marauders_garrison }
				}
			}
		}
		## TEST raiding_marauder stuck fix
		every_country = {
			# Find raiding_marauder (parent)
			limit = { is_country_type = dormant_marauders has_country_flag = raid_ongoing }
			country_event = { id = marauder.28 days = 8 }
		}
	}
}

## Reduce Khan naval cap's - create dummy country.
## This = Khan
country_event = {
	id = khan.311
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		exists = event_target:raider_khanate
		is_same_empire = event_target:raider_khanate
	}
	immediate = {
		set_update_modifiers_batch = begin
		remove_country_flag = ai_no_wars

		if = {
			limit = { has_ethic = ethic_xenophobe }
			country_remove_ethic = ethic_xenophobe
		}
		else_if = {
			limit = { has_ethic = ethic_fanatic_xenophobe }
			country_remove_ethic = ethic_fanatic_xenophobe
		}
		shift_ethic = ethic_xenophile # Omit purge pops and be the crisis

		set_policy = { policy = diplomatic_stance option = diplo_stance_belligerent cooldown = yes }

		if = {
			limit = { exists = ruler }
			ruler = {
				if = {
					limit = { NOT = { has_trait = leader_trait_fleet_organizer } }
					add_trait = leader_trait_fleet_organizer
				}
			}
		}
		if = {
			limit = { exists = event_target:great_khan }
			event_target:great_khan = {
				if = {
					limit = { NOT = { has_trait = leader_trait_fleet_logistician } }
					add_trait = leader_trait_fleet_logistician
				}
			}
		}

		country_event = { id = khan.312 days = -1 } # Create Garrison Dummy Country

		if = {
			limit = { OR = { is_ai = yes has_global_flag = CmtFlagDebugMode } }
			every_owned_starbase = {
				limit = { has_starbase_size > starbase_outpost }
				# Take max free slots
				# switch = { trigger = has_starbase_size not supported trigger 3.2
				# False Error: Failed to find starbase module '' in database: because type is omited to count any.
				if = {
					limit = { has_starbase_size = starbase_starport }
					if = { limit = { count_starbase_modules = { count < 1 } }
						set_starbase_module = { slot = 1 module = anchorage }
						if = {
							limit = { NOT = { is_starbase_building_module = anchorage } }
							set_starbase_module = { slot = 2 module = anchorage }
						}
					}
					else_if = {
						limit = { count_starbase_modules = { count < 2 } NOT = { is_starbase_building_module = anchorage } }
						set_starbase_module = { slot = 2 module = anchorage }
					}
				}
				else_if = {
					limit = { has_starbase_size = starbase_starhold }
					if = { limit = { count_starbase_modules = { count < 1 } }
						set_starbase_module = { slot = 1 module = anchorage }
						set_starbase_module = { slot = 2 module = anchorage }
						set_starbase_module = { slot = 3 module = anchorage }
						if = {
							limit = { NOT = { is_starbase_building_module = anchorage } }
							set_starbase_module = { slot = 4 module = anchorage }
						}
					}
					else_if = { limit = { count_starbase_modules = { count < 2 } }
					set_starbase_module = { slot = 2 module = anchorage }
						set_starbase_module = { slot = 3 module = anchorage }
						if = {
							limit = { NOT = { is_starbase_building_module = anchorage } }
							set_starbase_module = { slot = 4 module = anchorage }
						}
					}
					else_if = { limit = { count_starbase_modules = { count < 3 } }
					set_starbase_module = { slot = 3 module = anchorage }
						if = {
							limit = { NOT = { is_starbase_building_module = anchorage } }
							set_starbase_module = { slot = 4 module = anchorage }
						}
					}
					else_if = {
						limit = { count_starbase_modules = { count < 4 } NOT = { is_starbase_building_module = anchorage } }
						set_starbase_module = { slot = 4 module = anchorage }
					}
				}
				# starbase_starfortress = { 6
				# starbase_citadel = { 6
				else = {
					if = {
						limit = { count_starbase_modules = { count < 1 } }
						set_starbase_module = { slot = 1 module = anchorage }
						set_starbase_module = { slot = 2 module = anchorage }
						set_starbase_module = { slot = 3 module = anchorage }
						set_starbase_module = { slot = 4 module = anchorage }
						set_starbase_module = { slot = 5 module = anchorage }
						if = {
							limit = { NOT = { is_starbase_building_module = anchorage } }
							set_starbase_module = { slot = 6 module = anchorage }
						}
					}
					else_if = {
						limit = { count_starbase_modules = { count < 2 } }
						set_starbase_module = { slot = 2 module = anchorage }
						set_starbase_module = { slot = 3 module = anchorage }
						set_starbase_module = { slot = 4 module = anchorage }
						set_starbase_module = { slot = 5 module = anchorage }
						if = {
							limit = { NOT = { is_starbase_building_module = anchorage } }
							set_starbase_module = { slot = 6 module = anchorage }
						}
					}
					else_if = {
						limit = { count_starbase_modules = { count < 3 } }
						set_starbase_module = { slot = 3 module = anchorage }
						set_starbase_module = { slot = 4 module = anchorage }
						set_starbase_module = { slot = 5 module = anchorage }
						if = {
							limit = { NOT = { is_starbase_building_module = anchorage } }
							set_starbase_module = { slot = 6 module = anchorage }
						}
					}
					else_if = {
						limit = { count_starbase_modules = { count < 4 } }
						set_starbase_module = { slot = 4 module = anchorage }
						set_starbase_module = { slot = 5 module = anchorage }
						if = {
							limit = { NOT = { is_starbase_building_module = anchorage } }
							set_starbase_module = { slot = 6 module = anchorage }
						}
					}
					else_if = {
						limit = { count_starbase_modules = { count < 5 } }
						set_starbase_module = { slot = 5 module = anchorage }
						if = {
							limit = { NOT = { is_starbase_building_module = anchorage } }
							set_starbase_module = { slot = 6 module = anchorage }
						}
					}
					else_if = {
						limit = { count_starbase_modules = { count < 6 } NOT = { is_starbase_building_module = anchorage } }
						set_starbase_module = { slot = 6 module = anchorage }
					}
				}
			}
			every_owned_planet = {
				limit = {
					# has_building = building_capital
					is_colony = yes
					is_under_colonization = no
					num_unemployed > 2
					num_sapient_pops > 20
					NOR = {
						num_buildings = { type = building_stronghold value > 1 }
						has_building = building_fortress
					}
					free_building_slots > 0
				}
				add_building = building_stronghold
			}

			## Strategic Coordination Center
			if = {
				limit = {
					any_system_within_border = {
						has_star_flag = ruined_strategic_coordination_center_system
						any_system_megastructure = { is_megastructure_type = strategic_coordination_center_ruined }
					}
				}
				add_resource = { alloys = 150000 energy = 50000 }
				random_system_within_border = {
					limit = { has_star_flag = ruined_strategic_coordination_center_system }
					random_system_megastructure = {
						limit = { is_megastructure_type = strategic_coordination_center_ruined }
						upgrade_megastructure_to = strategic_coordination_center_restored
					}
				}
			}
			else_if = {
				limit = { has_megacorp = yes }
				give_tech_no_error_effect = { MESSAGE = no TECH = tech_starbase_5 }
				give_tech_no_error_effect = { MESSAGE = no TECH = tech_battleships }
				give_tech_no_error_effect = { MESSAGE = no TECH = tech_zero_point_power }
				give_tech_no_error_effect = { MESSAGE = no TECH = tech_mega_engineering }
				give_tech_no_error_effect = { MESSAGE = no TECH = tech_strategic_coordination }
				give_tech_no_error_effect = { MESSAGE = no TECH = tech_interstellar_assembly }
				if = {
					limit = { exists = capital_scope }
					capital_scope.solar_system = {
						spawn_megastructure = {
							type = "strategic_coordination_center_1"
							owner = root
							planet = star
						}
					}
				}
			}

			if = {
				limit = { NOT = { has_relic = r_khans_throne } }
				add_relic = r_khans_throne
			}

			### Need Naval Capacity

			give_tech_no_error_effect = { MESSAGE = no TECH = tech_gene_banks }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_planetary_defenses }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_ground_defense_planning }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_global_defense_grid }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_doctrine_navy_size_1 }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_doctrine_navy_size_2 }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_doctrine_navy_size_3 }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_doctrine_navy_size_4 }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_repeatable_naval_cap }

			if = {
				limit = { NOT = { has_tradition = tr_supremacy_adopt } }
				add_tradition = tr_supremacy_adopt
				add_tradition = tr_supremacy_master_shipwrights
				add_tradition = tr_supremacy_fleet_logistical_corps
				add_tradition = tr_supremacy_war_games
				add_tradition = tr_supremacy_overwhelming_force
				add_tradition = tr_supremacy_great_game
				add_tradition = tr_supremacy_finish
			}

			switch = { trigger = is_difficulty
				2 = { add_modifier = { modifier = difficulty_captain } }
				3 = { add_modifier = { modifier = difficulty_commodore } }
				4 = { add_modifier = { modifier = difficulty_admiral } }
				5 = { add_modifier = { modifier = difficulty_grand_admiral } }
			}

			add_modifier = { modifier = ai_strength years = 3 }
			add_modifier = { modifier = fallen_empire_base years = 4 }
			add_modifier = { modifier = sponsored_rebels years = 1 }
			add_modifier = { modifier = uprising_ai_buff years = 2 }
			add_modifier = { modifier = resolution_custodian_galactic_mobilization }
			add_modifier = { modifier = gdf_naval_cap years = 3 }
			add_modifier = { modifier = gdf_naval_cap_2 }
			add_modifier = { modifier = mercenary_fleet_size_upgrade_1 years = 1 }
			add_modifier = { modifier = mercenary_fleet_size_upgrade_2 years = 2 }
			add_modifier = { modifier = mercenary_fleet_size_upgrade_3 years = 3 }
			add_modifier = { modifier = mercenary_fleet_size_upgrade_4 years = 4 }
			add_modifier = { modifier = mercenary_fleet_size_upgrade_5 }
			add_modifier = { modifier = mercenary_enclave_logistic_help }
			add_modifier = { modifier = resolution_defenseprivatization_defense_contracts_merc_naval_cap }
			add_modifier = { modifier = resolution_defenseprivatization_private_support_troops_merc_naval_cap }
			add_modifier = { modifier = resolution_defenseprivatization_corporate_warlords_merc_naval_cap }
		}
		set_update_modifiers_batch = end
	}
}

### Deprecated (TODO)
### Drums of War - Khan Expanding War (Cycle) on_action yearly/on_becoming_subject MTTH 360
# This = Khan / subject
country_event = {
	id = khan.529
	hide_window = yes
	is_triggered_only = yes
	# From = subject's overlord (on_becoming_subject)
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		CmtTriggerNowInKhanCrisis = yes
		OR = {
			CmtTriggerIsKhanCountry = yes
			AND = {
				exists = from
				from = { is_same_empire = event_target:raider_khanate }
				is_subject_of_khan = yes
				NOT = { has_country_flag = rebellion_cooldown }
			}
		}
	}

	immediate = {
		if = {
			limit = {
				is_subject = yes
				# is_same_empire = event_target:new_satrapy
				overlord = {
					any_subject = { has_country_flag = rebellion_cooldown }
				}
			}
			break = yes
		}
		event_target:raider_khanate = {
			if = {
				limit = {
					any_playable_country = {
						has_communications = prev
						# merg_is_default_empire = yes
						NOR = {
							has_truce = prev
							is_subject_of_khan = yes
							is_at_war_with = prev
							is_same_empire = prev
						}
					}
				}
				random_neighbor_country = {
					limit = {
						# merg_is_default_empire = yes
						NOR = {
							has_truce = prev
							is_subject_of_khan = yes
							is_at_war_with = prev
							is_same_empire = prev
						}
					}
					weights = {
						base = 1
						modifier = { add = 3 relative_power = { who = prev category = fleet value < equivalent } }
						modifier = { add = 1 relative_power = { who = prev category = fleet value = equivalent } }
						modifier = { add = 3 opinion_level = { who = prev level < neutral } }
						modifier = { add = 1 opinion_level = { who = prev level = neutral } }
						modifier = { add = 2 has_federation = no }
					}
					prev = {
						declare_war = {
							target = prev
							name = "NAME_Expansion"
							attacker_war_goal = "wg_great_expansion"
						}
					}
					if = {
						limit = { has_origin = "origin_khan_successor" }
						change_variable = { which = "planets_lost_to_marauder" value = 3 }
					}
				}
				# Expand over the border?
				# if = {
				# 	limit = {
				# 		count_war = { count < 6 }
				# 		# every_war = {
				# 		# 	limit = { count_war_participants = { limit = { <triggers> } side = defender count < 4
				# 		# }
				# 	}
				# 	random_country = {
				# 		limit = {
				# 			has_communications = prev
				# 			merg_is_default_empire = yes
				# 			NOR = {
				# 				prev = { is_overlord_to = prev }
				# 				is_at_war_with = prev
				# 				is_same_empire = prev
				# 			}
				# 		}
				# 		weights = {
				# 			base = 1
				# 			modifier = { add = 3 relative_power = { who = prev category = fleet value < equivalent } }
				# 			modifier = { add = 1 relative_power = { who = prev category = fleet value = equivalent } }
				# 			modifier = { add = 3 opinion_level = { who = prev level < neutral } }
				# 			modifier = { add = 1 opinion_level = { who = prev level = neutral } }
				# 			modifier = { add = 2 has_federation = no }
				# 		}
				# 		set_faction_hostility = {
				# 			target = prev
				# 			set_hostile = yes
				# 		}
				# 		prev = {
				# 			declare_war = {
				# 				target = prev
				# 				name = "NAME_Expansion"
				# 				attacker_war_goal = "wg_great_expansion"
				# 			}
				# 			set_faction_hostility = {
				# 				target = prev
				# 				set_hostile = yes
				# 			}
				# 		}
				# 		if = {
				# 			limit = { has_origin = "origin_khan_successor" }
				# 			change_variable = { which = "planets_lost_to_marauder" value = 3 }
				# 		}
				# 	}
				# }
			}
			# country_event = { id = khan.529 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_4e } still on_action for temp savegame
		}
		# else = { country_event = { id = khan.529 days = 400 } }
	}
}

# Player Defeating the Khan and choosing to be Successor
country_event = {
	id = khan.605
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		# TODO: Player could chose!? Mysteric Bug Reported: Somehow player lost systems to the new new_khanate fully unrelated??
		if = {
			limit = { NOT = { exists = event_target:raider_khanate } }
			from = { save_event_target_as = raider_khanate }
		}
		set_player = event_target:raider_khanate
	}
}

# # Get a new Khan? (before marauder future) now 510
# country_event = {
# 	id = khan.710
# 	title = "FE_war_choice"
# 	desc = "marauder.510.desc"
# 	picture = GFX_evt_space_funeral
# 	show_sound = event_conversation
# 	is_triggered_only = yes
# 	trigger = {
# 		exists = event_target:raider_khanate
# 	}
# 	option = { name = great_khan_integrate_response }
# }

# DEPRECATED (removed in 3.3 - now marauder.554)
# Uprising fabricator satrapy
# country_event = {
# 	id = khan.751
# 	title = "greatkhan_diplo_header"
# 	desc = marauder_fabricator_threat
# 	picture_event_data = {
# 		portrait = event_target:great_khan
# 		room = khorgis_khan_1_room
# 	}
# 	is_triggered_only = yes
# 	force_open = yes
# 	diplomatic = yes
# 	trigger = {
# 		NOT = { has_country_flag = marauder_diplomacy_engaged }
# 		exists = event_target:raider_khanate
# 	}
# 	immediate = { set_country_flag = marauder_diplomacy_engaged }
# 	after = {
# 		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
# 	}
# 	option = {
# 		name = marauder_fabricator_disloyal
# 		sound = no_tut_advior_02
# 		response_text = marauder.554.a.response
# 		set_subject_of = { who = none }
# 		hidden_effect = {
# 			set_country_flag = rebelling_satrapy
# 			set_timed_country_flag = { flag = rebellion_cooldown days = @CmtConstKhanLifespan_5e }
# 			if = { limit = { has_modifier = "satrapy_of_horde" }
# 				remove_modifier = "satrapy_of_horde"
# 			}
# 			if = { limit = { is_variable_set = "planets_lost_to_marauder" }
# 				multiply_variable = { which = "planets_lost_to_marauder" value = 0.2 }
# 			}
# 			if = {
# 				limit = { has_federation = yes is_in_federation_with = event_target:raider_khanate }
# 				leave_alliance = { override_requirements = yes }
# 			}
# 			if = {
# 				limit = { is_ai = yes }
# 				event_target:raider_khanate = {
# 					random_owned_fleet = {
# 						limit = {
# 							has_fleet_flag = satrapy_garrison
# 							solar_system = { is_owned_by = root }
# 						}
# 						destroy_fleet = { target = this destroy_template = yes }
# 					}
# 					random_owned_fleet = {
# 						limit = {
# 							has_fleet_flag = satrapy_garrison_fleet
# 							solar_system = { is_owned_by = root }
# 						}
# 						set_owner = root
# 						if = {
# 							limit = { exists = leader }
# 							leader = { set_owner = root }
# 						}
# 					}
# 				}
# 			}
# 			if = {
# 				limit = {
# 					has_global_flag = great_khan_wins
# 					event_target:raider_khanate = {
# 						any_war = {
# 							using_war_goal = { type = "wg_satrapy_independence" owner = attacker }
# 						}
# 					}
# 				}
# 				event_target:raider_khanate = {
# 					random_war = {
# 						limit = {
# 							using_war_goal = { type = "wg_satrapy_independence" owner = attacker }
# 						}
# 						root = {
# 							join_war_on_side = { war = prev side = attackers }
# 						}
# 					}
# 				}
# 			} else = {
# 				every_war = { # End War
# 					limit = { is_war_participant = { who = event_target:raider_khanate } }
# 					remove_war_participant = root
# 				}
# 				declare_war = {
# 					target = event_target:raider_khanate
# 					name = "NAME_Rebellion"
# 					attacker_war_goal = "wg_satrapy_independence"
# 				}
# 			}

# 			event_target:raider_khanate = {
# 				add_opinion_modifier = { modifier = opinion_traitor_to_empire who = prev }
# 				if = { limit = { NOT = { is_hostile = root } }
# 					set_faction_hostility = {
# 						target = root
# 						set_hostile = yes
# 					}
# 				}
# 			}
# 		}
# 		ai_chance = { factor = 2 }
# 	}
# 	option = {
# 		name = marauder_fabricator_loyal
# 		# sound = no_tut_advior_07
# 		response_text = marauder.554.b.response
# 		ai_chance = { factor = 0 }
# 	}
# }

# Fabricator satrapy (Reinforcement Cycle)
country_event = {
	id = khan.798
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		NOT = { has_country_flag = rebelling_satrapy }
		is_subject = yes
		any_agreement = { agreement_preset = preset_fabricator_satrapy }
		exists = event_target:raider_khanate
		NOT = { has_global_flag = great_khan_wins }
	}
	immediate = {
		if = {
			limit = { event_target:raider_khanate = { fleet_power > 250000 } }
			event_target:raider_khanate = {
				country_event = { id = khan.798 days = 210 }
				set_variable = { which = marauder_habitat_count value = 1 }
				country_event = { id = khan.612 days = 7 } # Build Habitats
			}
			break = yes
		}

		create_fleet = {
			name = "NAME_Thalassocracy_fleet"
			effect = {
				random_list = {
					20 = {
						set_owner = event_target:raider_khanate
						# while = { count = 2
						# 	while = { count = 11 CmtEffectCreateShip_Outrider = yes }
						# 	while = { count = 7 CmtEffectCreateShip_Lancer = yes }
						# 	while = { count = 4 CmtEffectCreateShip_VoidChampion = yes }
						# }
						create_dyn_marauder_fleet = { OUTRIDER = 22 LANCER = 14 CHAMPION = 8 VARIANT = "_4" }
					}
					80 = { # Own ships
						set_owner = root
						while = { count = 22
							create_ship = {
								name = random
								prefix = no
								random_existing_design = corvette
								graphical_culture = root
							}
						}
						while = { count = 14
							create_ship = {
								name = random
								prefix = no
								random_existing_design = destroyer
								graphical_culture = root
							}
						}
						while = { count = 5
							create_ship = {
								name = random
								prefix = no
								random_existing_design = cruiser
								graphical_culture = root
							}
						}
						if = {
							limit = { root = { any_owned_design = { is_ship_size = battleship } } }
							while = { count = 1
								create_ship = {
									name = random
									prefix = no
									random_existing_design = battleship
									graphical_culture = root
								}
							}
						}
					}
				}
				set_formation_scale = 2
				set_fleet_stance = aggressive
				set_aggro_range_measure_from = self
				set_aggro_range = 250
				set_location = {
					target = root.capital_scope
					distance = 20
					angle = random
				}
			}
		}

		last_created_fleet = { set_owner = event_target:raider_khanate }

		capital_scope = {
			create_fleet = {
				effect = {
					set_owner = root
					reroll_random = yes
					random_list = {
						99 = {
							while = { count = 2 CmtEffectCreateShip_KhanArmy = { TYPE = "machine_assault_3" } }
							modifier = {
								factor = 0
								root = {
									NOR = { is_machine_empire = yes has_technology = tech_biomechanics }
								}
							}
						}
						80 = {
							while = { count = 2 CmtEffectCreateShip_KhanArmy = { TYPE = "gene_warrior_army" } }
							modifier = {
								factor = 0
								root = {
									OR = {
										is_machine_empire = yes
										NOT = { has_technology = tech_gene_seed_purification }
									}
								}
							}
						}
						60 = {
							while = { count = 3 CmtEffectCreateShip_KhanArmy = { TYPE = "psionic_army" } }
							modifier = {
								factor = 0
								root = {
									OR = {
										is_machine_empire = yes
										NOT = { has_technology = tech_telepathy }
									}
								}
							}
						}
						50 = {
							while = { count = 5 CmtEffectCreateShip_KhanArmy = { TYPE = "machine_assault_2" } }
							modifier = {
								factor = 0
								root = {
									NOR = { is_machine_empire = yes has_technology = tech_adaptive_combat_algorithms }
								}
							}
						}
						30 = {
							while = { count = 5 CmtEffectCreateShip_KhanArmy = { TYPE = "clone_army" } }
							modifier = {
								factor = 0
								root = {
									OR = {
										is_machine_empire = yes
										NOT = { has_technology = tech_gene_banks }
									}
								}
							}
						}
						# 2 = {
						# 	while = { count = 5 CmtEffectCreateShip_KhanArmy = { TYPE = "slave_army" } }
						# 	modifier = {
						# 		factor = 0
						# 		root = {
						# 			OR = {
						# 				is_machine_empire = yes
						# 				NOT = { has_policy_flag = slavery_allowed }
						# 				NOT = { has_technology = tech_neural_implants }
						# 			}
						# 		}
						# 	}
						# }
						# 1 = { while = { count = 5 CmtEffectCreateShip_KhanArmy = yes } }
					}
					set_location = {
						target = prev
						distance = 20
						angle = random
					}
					random_list = {
						2 = {}
						3 = { set_fleet_stance = evasive } # AI does not handle this well too.
						5 = { set_fleet_stance = aggressive }
					}
				}
			}
		}
		# This is a crazy workaround (as scope ship/fleet to army is not working - as documented?)
		last_created_fleet = {
			if = {
				limit = {
					last_created_army = {
						exists = fleet
						fleet = { is_same_value = prevprev }
					}
				}
				root = {
					every_owned_army = {
						limit = {
							exists = fleet
							fleet = { is_same_value = prevprevprev }
						}
						set_owner = event_target:raider_khanate
					}
				}
				set_owner = event_target:raider_khanate
			}
		}
		country_event = { id = khan.798 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_2f }
	}
}

# Submit as fabricator satrapy
country_event = {
	id = khan.799
	title = "greatkhan_diplo_header"
	desc = marauder_fabricator_offer
	picture_event_data = { portrait = event_target:great_khan room = khorgis_khan_1_room }
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder_fabricator_deal_accept
		custom_tooltip = "preset_fabricator_satrapy_desc"
		# sound = placeholder_sfx
		trigger = { has_been_declared_crisis = no }
		response_text = marauder_fabricator_good
		country_event = { id = khan.559 days = -1 } # Pre-Submit to Khan
		set_subject_of = { who = event_target:raider_khanate preset = preset_fabricator_satrapy }
		hidden_effect = {
			event_target:raider_khanate = {
				if = {
					limit = { is_hostile = prev }
					set_faction_hostility = {
						target = prev
						set_hostile = no
						set_neutral = yes
					}
				}
				country_event = { id = khan.309 days = 1 } # Friendly to be sure
			}
			country_event = { id = khan.798 days = @CmtConstKhanLifespan_5e random = @CmtConstKhanLifespan_2f }
		}
		ai_chance = { factor = 5 }
	}
	option = {
		name = marauder_fabricator_deal_refuse
		# sound = no_tut_advior_07
		response_text = marauder_deal_refuse
		ai_chance = { factor = 0 }
	}
}

# DEPRECATED now marauder.520
# Reinforcement Cycle: Need a flag to determine if the horde has a machinesmith, and if, then set this as the new
# This = Marauder
country_event = {
	id = khan.868
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		CmtTriggerIsKhanCountry = yes
		# has_country_flag = has_machinesmith
	}
	immediate = {
		country_event = { id = khan.306 days = -1 } # Check/Create fallback rally_point
		create_marauder_constructors = yes
		if = {
			limit = { num_armies < 40 }
			create_marauder_armies = yes
		}
		if = {
			limit = {
				OR = {
					NOT = { exists = event_target:marauder_rally_point }
					fleet_power > 300000
				}
			}
			country_event = { id = khan.868 days = 210 }
			break = yes
		}
		if = {
			limit = { end_game_years_passed > -50 }
			country_event = { id = khan.299 } # End check
		}
		if = {
			limit = { has_country_flag = has_machinesmith }
			event_target:marauder_rally_point = {
				create_fleet = {
					effect = {
						set_owner = root
						create_dyn_marauder_fleet = { OUTRIDER = 20 LANCER = 10 CHAMPION = 6 VARIANT = "_4" }
						set_location = {
							target = prev
							distance = 20
							angle = random
						}
						set_aggro_range = 500
						set_fleet_stance = aggressive
						set_aggro_range_measure_from = self
					}
				}
			}
			random_subject = {
				limit = {
					any_agreement = { agreement_preset = preset_machinesmith_satrapy }
					NOT = { has_country_flag = rebelling_satrapy }
				}
				root = {
					if = {
						limit = { can_copy_random_tech_from = { who = prev } }
						copy_random_tech_from = { who = prev }
					}
				}
				log = "machinesmith sold"
				country_event = { id = khan.868 days = 270 } # Improved cycle
				break = yes
			}
			remove_country_flag = has_machinesmith # Regular cycle
			country_event = { id = marauder.520 days = 330 }
		}
		else = {
			country_event = { id = marauder.520 days = 96 }
		}
	}
}

# DEPRECATED (now khan.870)
# Don't start a second cycle as this could lead to uncontrollable loops!?
# great_khan has won (End-Game Regular Reinforcement Cycle)
# This = Marauder
country_event = {
	id = khan.869
	hide_window = yes
	is_triggered_only = yes
	trigger = { has_global_flag = marauder_crisis_ongoing has_global_flag = great_khan_wins }
	immediate = {
		if = {
			limit = { has_country_flag = has_machinesmith }
			country_event = { id = khan.870 } # Improved Reinforcement
		}
		else = {
			if = {
				limit = { # Make sure home system still owned.
					any_planet_within_border = { has_planet_flag = marauder_rally_point }
				}
				create_marauder_constructors = yes
				if = {
					limit = { num_armies < 50 }
					create_marauder_armies = yes
				}
				# If at fleet cap, check again later.
				if = {
					limit = { fleet_power < 450000 }
					# create_marauder_fleet = yes
					event_target:CmtGlobalVar = { CmtEffectKhanReinforceOnCapital = yes }
				}
			}
			# country_event = { id = khan.869 days = 340 }
			country_event = { id = khan.870 days = 210 }
		}
	}
}

### Great Khan has won (End-Game - Improved Reinforcement Cycle)
# This = Marauder
country_event = {
	id = khan.870
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_global_flag = marauder_crisis_ongoing
		CmtTriggerIsKhanCountry = yes
		OR = { has_country_flag = has_machinesmith has_global_flag = great_khan_wins }
		NOT = { has_global_flag = war_in_heaven_started }
	}
	immediate = {
		country_event = { id = khan.306 days = -1 } # Check/Create fallback rally_point
		# log="khan.870 Cycle"
		create_marauder_constructors = yes # Full check included

		if = {
			limit = {
				OR = {
					NOT = { exists = event_target:marauder_rally_point }
					fleet_power > 550000
				}
			}
			country_event = { id = khan.870 days = 210 }
			set_variable = { which = marauder_habitat_count value = 1 }
			country_event = { id = khan.612 days = 7 } # Build Habitats
			break = yes
		}
		if = {
			limit = { num_armies < 50 }
			create_marauder_armies = yes
		}
		if = {
			limit = {
				OR = {
					fleet_power < 400000
					AND = {
						has_country_flag = marauder_1
						has_country_flag = marauder_2
						has_country_flag = marauder_3
					}
				}
			}
			if = { # At fleet cap, check again later.
				limit = { has_country_flag = has_machinesmith }
				event_target:marauder_rally_point = {
					create_fleet = {
						effect = {
							set_owner = root
							create_dyn_marauder_fleet = { OUTRIDER = 20 LANCER = 10 CHAMPION = 6 GLORY = 2 VARIANT = "_4" }
							set_location = {
								target = prev
								distance = 20
								angle = random
							}
							set_aggro_range = 500
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = self
						}
					}
				}
				### Share knowledge with Horde;
				every_subject = {
					limit = {
						NOR = { has_country_flag = rebellion_cooldown has_country_flag = rebelling_satrapy }
						can_copy_random_tech_from = { who = prev }
					}
					copy_random_tech_from = { who = prev }
					root = {
						if = {
							limit = { can_copy_random_tech_from = { who = prev } }
							copy_random_tech_from = { who = prev }
						}
					}
				}
			}
			else = { # _if = { limit = { fleet_power < 400000 }
				event_target:CmtGlobalVar = { CmtEffectKhanReinforceOnCapital = yes }
			}
		}
		else = { # _if = { limit = { fleet_power < 550000 }
			event_target:CmtGlobalVar = { CmtEffectKhanReinforceOnCapital = yes }
		}
		# Force to war
		if = {
			limit = {
				has_global_flag = war_in_heaven_ongoing
 				root = { is_at_war = yes }
			}
			random_subject = {
				limit = {
					NOR = {
						# any_agreement = { agreement_preset = preset_machinesmith_satrapy }
						# any_agreement = { agreement_preset = preset_fabricator_satrapy }
						has_country_flag = rebellion_cooldown
						has_country_flag = rebelling_satrapy
						is_at_war = yes
					}
				}
				if = {
					limit = {
						OR = {
							has_origin = "origin_khan_successor"
							any_agreement = { agreement_preset = preset_war_satrapy }
							CmtTriggerIsMarauder = yes
						}
					}
					join_war = root
				}
				else = {
					root = {
						random_war = {
							limit = { using_war_goal = { type = "wg_war_in_heaven" owner = prev } }
							prevprev = {
								join_war_on_side = { war = prev side = prevprev }
							}
						}
					}
				}
			}

			if = {
				limit = {
					exists = federation
					federation = { has_federation_flag = great_galactic_horde }
				}
				federation = {
					add_cohesion = 10
					random_member = {
						limit = {
							NOR = {
								has_country_flag = rebellion_cooldown
								has_country_flag = rebelling_satrapy
								is_same_empire = root
								is_at_war = yes
							}
							is_subject_of_khan = no
						}
						if = {
							limit = {
								OR = {
									has_origin = "origin_khan_successor"
									# any_agreement = { agreement_preset = preset_war_satrapy }
									CmtTriggerIsMarauder = yes
								}
							}
							join_war = root
						}
						else = {
							root = {
								random_war = {
									limit = { using_war_goal = { type = "wg_war_in_heaven" owner = prev } }
									prevprev = {
										join_war_on_side = { war = prev side = prevprev }
									}
								}
							}
						}
					}
				}
			}
		}

		# Fallback Workaround Khan Admiral missing.
		if = {
			limit = {
				NOR = { has_global_flag = great_khan_dead has_country_flag = khan_dead_event_fine }
				OR = {
					has_global_flag = khan_no_die
					has_country_flag = CmtFlagKhanNoDieCountry
				}
				exists = event_target:great_khan
				event_target:great_khan = { is_scope_valid = yes }
				NAND = {
					exists = event_target:great_khan.fleet
					event_target:great_khan.fleet = { num_ships > 0 }
				}
			}
			event_target:great_khan = { exile_leader_as = great_khan }
			if = { # Put him on a fleet.
				limit = {
					any_owned_fleet = {
						exists = solar_system
						is_mobile = yes
						NOR = {
							is_civilian = yes
							is_in_combat = yes
							exists = leader
							has_fleet_flag = satrapy_garrison_fleet
							fleet_power < 20000
						}
						exists = controller
						controller = { is_same_empire = prevprev }
					}
				}
				# Assign him on the strongest fleet.
				ordered_owned_fleet = {
					limit = {
						exists = solar_system
						is_mobile = yes
						NOR = {
							is_civilian = yes
							is_in_combat = yes
							exists = leader
							has_fleet_flag = satrapy_garrison_fleet
							fleet_power < 20000
						}
						exists = controller
						controller = { is_same_empire = prevprev }
					}
					position = 0
					order_by = trigger:fleet_power
					set_leader = great_khan # previously-exiled leader
					assign_leader = event_target:great_khan
					set_fleet_flag = khan_fleet
				}
			}
			else = {
				event_target:marauder_rally_point = {
					if = {
						limit = { exists = event_target:great_khan }
						CmtEffectCreateAdmiralty_Khan1stFleet = yes
					}
					else = { # Try take exiled - not always work.
						event_target:raider_khanate = { CmtEffectCreateFleet_Khan2ndFleet = yes }
					}
				}
			}
		}

		if = { ## Unlimited Multiple Marauder (Khan can have multiple marauder_flags)
			limit = {
				OR = {
					has_global_flag = great_khan_wins
					event_target:CmtGlobalVar = { check_variable = { which = CmtVarKhanMultiple value = 5 } }
				}
			}

			every_planet_within_border = {
				limit = { has_planet_flag = CmtFlagMarauderExpRallyPoint }
				prev = { get_marauder_species = { PLANET = prev } }
				if = {
					limit = {
						prev = { has_country_flag = marauder_1 }
						OR = {
							AND = { exists = event_target:CmtTargetMarauderRallyPoint1 is_same_value = event_target:CmtTargetMarauderRallyPoint1 }
							AND = {
								exists = event_target:marauder_rally_point
								is_same_value = event_target:marauder_rally_point
							}
						}
					}
					CmtEffectCreateAdmiralty_KhanMercenaries1 = yes
				}
				if = {
					limit = {
						prev = { has_country_flag = marauder_2 }
						OR = {
							AND = { exists = event_target:CmtTargetMarauderRallyPoint2 is_same_value = event_target:CmtTargetMarauderRallyPoint2 }
							AND = {
								exists = event_target:marauder_rally_point
								is_same_value = event_target:marauder_rally_point
							}
						}
					}
					CmtEffectCreateAdmiralty_KhanMercenaries2 = yes
				}
				if = {
					limit = {
						prev = { has_country_flag = marauder_3 }
						OR = {
							AND = { exists = event_target:CmtTargetMarauderRallyPoint3 is_same_value = event_target:CmtTargetMarauderRallyPoint3 }
							AND = {
								exists = event_target:marauder_rally_point
								is_same_value = event_target:marauder_rally_point
							}
						}
					}
					CmtEffectCreateAdmiralty_KhanMercenaries3 = yes
				}

				if = {
					limit = { has_global_flag = war_in_heaven_nonaligned_league }
					random_federation = {
						limit = { has_federation_flag = non_aligned_league }
						random_member = {
							limit = { is_federation_leader = yes }
							if = {
								limit = { NOT = { is_at_war_with = root } }
								remove_global_flag = war_in_heaven_nonaligned_league_war
								remove_country_flag = war_in_heaven_nonaligned_league_timer
								country_event = { id = khan.216 days = 60 }
								country_event = { id = khan.216 days = 360 }
							}
							if = {
								limit = {
									OR = {
										is_at_war = no
										AND = {
											exists = event_target:FirstSleeper
											NOT = { is_at_war_with = event_target:FirstSleeper }
										}
										AND = {
											exists = event_target:SecondSleeper
											NOT = { is_at_war_with = event_target:SecondSleeper }
										}
									}
								}
								remove_global_flag = war_in_heaven_nonaligned_league_war
								remove_country_flag = war_in_heaven_nonaligned_league_timer
								country_event = { id = war_in_heaven.16 days = 30 } # FE attack
							}
						}
					}
				}
			}
			# TODO test balance (omit suffering intermittent resource shortages)
			add_resource = {
				minerals =	1000
				energy =	4000
				food	=	400
			}
		}

		### Check machinesmith;
		random_subject = {
			limit = {
				any_agreement = { agreement_preset = preset_machinesmith_satrapy }
				NOR = { has_country_flag = rebellion_cooldown has_country_flag = rebelling_satrapy }
			}
			root = {
				if = {
					limit = { can_copy_random_tech_from = { who = prev } }
					copy_random_tech_from = { who = prev }
				}
			}
			log = "Improved Machinesmith sold"
			country_event = { id = khan.870 days = 420 } # Improved cycle
			break = yes
		}
		remove_country_flag = has_machinesmith # Regular cycle
		if = { # Only one cycle for Khan Endgame
			limit = {
				OR = {
					NOT = { has_global_flag = great_khan_wins }
					has_global_flag = war_in_heaven_ongoing
				}
			}
			country_event = { id = khan.870 days = 420 }
		}
	}
}

# Submit as machinesmith (vanilla = marauder.551)
country_event = {
	id = khan.997
	title = "greatkhan_diplo_header"
	desc = marauder_deal_offer
	picture_event_data = { portrait = event_target:great_khan room = khorgis_khan_1_room }
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder_deal_response
		custom_tooltip = "preset_machinesmith_satrapy_desc"
		# sound = placeholder_sfx
		trigger = { has_been_declared_crisis = no }
		response_text = marauder_deal_accept
		country_event = { id = khan.559 days = -1 } # Pre-Submit to Khan
		set_subject_of = { who = event_target:raider_khanate preset = preset_machinesmith_satrapy }
		hidden_effect = {
			event_target:raider_khanate = {
				if = {
					limit = { is_hostile = prev }
					set_faction_hostility = {
						target = prev
						set_hostile = no
						set_neutral = yes
					}
				}
				country_event = { id = khan.309 days = 1 } # Friendly to be sure
				set_country_flag = has_machinesmith
				# country_event = { id = khan.868 } # (New Reinforcement Cycle)
			}
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_mass_drivers_4 }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_autocannons_3 }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_lasers_4 }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_ship_armor_4 }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_shields_4 }
			give_tech_no_error_effect = { MESSAGE = no TECH = tech_starbase_5 } # Citadel
		}
		ai_chance = { factor = 5 }
	}
	option = {
		name = marauder_deal_bad_response
		# sound = no_tut_advior_07
		response_text = marauder_deal_refuse
		ai_chance = { factor = 0 }
	}
}

# Special Submit?
country_event = {
	id = khan.998
	title = "greatkhan_diplo_header"
	desc = marauder_deal
	picture_event_data = { portrait = event_target:great_khan room = khorgis_khan_1_room }
	is_triggered_only = yes
	force_open = yes
	diplomatic = yes
	immediate = { set_country_flag = marauder_diplomacy_engaged }
	after = {
		hidden_effect = { remove_country_flag = marauder_diplomacy_engaged }
	}
	option = {
		name = marauder_deal_reason
		custom_tooltip = "preset_machinesmith_satrapy_desc"
		# sound = placeholder_sfx
		trigger = {
			NAND = {
				is_subject_of_khan = yes
				any_agreement = { agreement_preset = preset_machinesmith_satrapy }
			}
			has_technology = tech_mass_drivers_4
			has_technology = tech_lasers_4
			has_technology = tech_ship_armor_4
			has_technology = tech_shields_4
		}
		allow = { NOT = { has_active_event = { khan.997 } } }
		hidden_effect = {
			country_event = { id = khan.997 }
		}
		ai_chance = { factor = 5 }
	}
	option = {
		name = marauder_fabricator_deal_reason
		custom_tooltip = "preset_fabricator_satrapy_desc"
		# sound = placeholder_sfx
		trigger = {
			NAND = {
				is_subject_of_khan = yes
				any_agreement = { agreement_preset = preset_fabricator_satrapy }
			}
			has_monthly_income = { resource = alloys value > 100 }
		}
		allow = { NOT = { has_active_event = { khan.799 } } }
		hidden_effect = {
			country_event = { id = khan.799 }
		}
	}
	option = {
		name = NEGOTIATE
		default_hide_option = yes
		ai_chance = { factor = 0 }
		hidden_effect = {
			country_event = { id = marauder.550 scopes = { from = fromfrom } }
		}
	}
}

### Great Khan Spawn Settings
# country_event = {
# 	id = khan.999
# 	is_triggered_only = yes
# 	title = "khan.999.name"
# 	desc = "khan.999.desc"
# 	picture = GFX_evt_khan_throne_room
# 	option = {
# 		name = force_khan_option
# 		exclusive_trigger = {
# 			# NOT = { has_global_flag = force_khan }
# 			event_target:CmtGlobalVar = {
# 				check_variable = { which = CmtVarKhanTriggerProbability value < 5 }
# 			}
# 		}
# 		hidden_effect = {
# 			# set_global_flag = force_khan
# 			event_target:CmtGlobalVar = {
# 				set_variable = { which = CmtVarKhanTriggerProbability value = 5 }
# 			}
# 		}
# 	}
# 	option = {
# 		name = normal_khan
# 		exclusive_trigger = {
# 			# has_global_flag = force_khan
# 			event_target:CmtGlobalVar = {
# 				check_variable = { which = CmtVarKhanTriggerProbability value = 5 }
# 			}
# 		}
# 		hidden_effect = {
# 			# remove_global_flag = force_khan
# 			event_target:CmtGlobalVar = {
# 				set_variable = { which = CmtVarKhanTriggerProbability value = 2 }
# 			}
# 		}
# 	}
# }

# Khan asked to defend subject member (on_war_beginning)
# This = every country in the war.
# From = War
country_event = {
	id = khan.901 # Similar emperor.370
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = marauder_crisis_ongoing
		is_war_leader = no
		is_subject_of_khan = yes
		exists = from
		# is_war_participant = { war = from side = defenders }
		exists = event_target:raider_khanate
		from = {
			NOR = {
				any_war_participant = { is_same_empire = event_target:raider_khanate }
				any_attacker = { is_subject_of_khan = yes }
			}
		}
	}

	immediate = {
		if = {
			limit = { is_war_participant = { war = from side = defenders } }
			save_event_target_as = victim_country
			from = {
				random_attacker = {
					limit = { is_war_leader = yes }
					save_event_target_as = attacking_country
				}
			}
			event_target:raider_khanate = {
				if = {
					limit = { NOT = { is_hostile = event_target:attacking_country } }
					set_faction_hostility = { target = event_target:attacking_country set_hostile = yes }
				}
			}
			if = {
				limit = {
					OR = {
						event_target:victim_country = {
							any_agreement = { agreement_preset = preset_war_satrapy }
						}
						count_playable_country = { limit = { is_same_empire = event_target:attacking_country } count = 0 }
					}
				}
				event_target:raider_khanate = {
					country_event = { id = emperor.371 days = 10 }
				}
			}
		}
		else_if = { # TODO needs test (theoretically not possible)
			limit = {
				is_war_participant = { war = from side = attackers }
				event_target:raider_khanate = {
					is_war_participant = { war = from side = defenders }
				}
			}
			set_subject_of = { who = none }
			set_country_flag = rebelling_satrapy
			set_timed_country_flag = { flag = rebellion_cooldown days = @CmtConstKhanLifespan_5e }
			# if = { limit = { has_modifier = "satrapy_of_horde" }
			# 	remove_modifier = "satrapy_of_horde"
			# }
		}
	}
}

# on_action (delay needed)
# Sync garrison virtual relations (on_war_beginning, on_war_ended)
country_event = {
	id = khan.1876
	is_triggered_only = yes
	hide_window = yes
	trigger = { has_global_flag = marauder_crisis_started exists = event_target:marauders_garrison_1 }
	immediate = {
		# Kill Special Subject Country if their master is dead.
		if = {
			limit = { NOT = { exists = event_target:raider_khanate } }
			event_target:marauders_garrison_1 = { destroy_country = yes }
		}
		else = {
			event_target:raider_khanate = {
				country_event = { id = khan.309 days = 2 }
			}
		}
	}
}
